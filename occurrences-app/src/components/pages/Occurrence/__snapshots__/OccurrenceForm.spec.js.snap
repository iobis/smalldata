// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OccurrenceForm renders correctly 1`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ActiveStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
        <Dataset
          datasets={
            Array [
              Object {
                "description": "HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.",
                "id": 0,
              },
              Object {
                "description": "NPPSD Short-tailed Albatross Sightings",
                "id": 1,
              },
              Object {
                "description": "PANGAEA - Data from Christian-Albrechts-University Kiel",
                "id": 2,
              },
              Object {
                "description": "NSIS: List of marine benthic algae from Magdalen Islands, Quebec as recorded in 1979",
                "id": 3,
              },
              Object {
                "description": "Seguimiento de 10 crías de tortuga boba nacidas en 2016 en el litoral valenciano, en el marco del Proyecto LIFE 15 IPE ES 012 (aggregated per 1-degree cell)",
                "id": 4,
              },
              Object {
                "description": "Waved Albatross Tracking (aggregated per 1-degree cell)",
                "id": 5,
              },
            ]
          }
          onChange={[Function]}
          selectedDataset={
            Object {
              "description": "HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.",
              "id": 0,
            }
          }
        >
          <div
            className="dataset columns is-fluid"
          >
            <table
              className="table is-striped is-fullwidth"
            >
              <tbody>
                <DatasetOption
                  checked={true}
                  description="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
                  id={0}
                  key="0"
                  onClick={[Function]}
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={true}
                        name="dataset"
                        onChange={[Function]}
                        value={0}
                      >
                        <input
                          checked={true}
                          className="input-radio is-checkradio"
                          id="dataset-0"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value={0}
                        />
                        <label
                          htmlFor="dataset-0"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  description="NPPSD Short-tailed Albatross Sightings"
                  id={1}
                  key="1"
                  onClick={[Function]}
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value={1}
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-1"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value={1}
                        />
                        <label
                          htmlFor="dataset-1"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      NPPSD Short-tailed Albatross Sightings
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  description="PANGAEA - Data from Christian-Albrechts-University Kiel"
                  id={2}
                  key="2"
                  onClick={[Function]}
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value={2}
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-2"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value={2}
                        />
                        <label
                          htmlFor="dataset-2"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      PANGAEA - Data from Christian-Albrechts-University Kiel
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  description="NSIS: List of marine benthic algae from Magdalen Islands, Quebec as recorded in 1979"
                  id={3}
                  key="3"
                  onClick={[Function]}
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value={3}
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-3"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value={3}
                        />
                        <label
                          htmlFor="dataset-3"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      NSIS: List of marine benthic algae from Magdalen Islands, Quebec as recorded in 1979
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  description="Seguimiento de 10 crías de tortuga boba nacidas en 2016 en el litoral valenciano, en el marco del Proyecto LIFE 15 IPE ES 012 (aggregated per 1-degree cell)"
                  id={4}
                  key="4"
                  onClick={[Function]}
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value={4}
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-4"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value={4}
                        />
                        <label
                          htmlFor="dataset-4"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Seguimiento de 10 crías de tortuga boba nacidas en 2016 en el litoral valenciano, en el marco del Proyecto LIFE 15 IPE ES 012 (aggregated per 1-degree cell)
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  description="Waved Albatross Tracking (aggregated per 1-degree cell)"
                  id={5}
                  key="5"
                  onClick={[Function]}
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value={5}
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-5"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value={5}
                        />
                        <label
                          htmlFor="dataset-5"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Waved Albatross Tracking (aggregated per 1-degree cell)
                    </td>
                  </tr>
                </DatasetOption>
              </tbody>
            </table>
          </div>
        </Dataset>
      </StepHeader>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-2 background-color-5"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={null}
          decimalLongitude={null}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-3 background-color-10"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-4 background-color-15"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={Array []}
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm renders correctly 2`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.dataset.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifestage={null}
            occurrenceStatus="present"
            scientificName=""
            sex={null}
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.occurrenceData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifestage={null}
              occurrenceStatus="present"
              scientificName=""
              sex={null}
            >
              <div>
                 29 April 2019 
              </div>
            </OccurrenceDataSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.locationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <div>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </div>
              <div>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </div>
            </SelectedLocation>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
        <ObservationData
          observationData={
            Object {
              "catalogNumber": "",
              "collectionCode": "",
              "fieldNumber": "",
              "identificationQualifier": "",
              "identificationRemarks": "",
              "identifiedBy": Array [],
              "institutionCode": "",
              "recordNumber": "",
              "recordedBy": Array [],
              "references": Array [],
            }
          }
          onChange={[Function]}
        >
          <div
            className="observation-data section is-fluid"
          >
            <div
              className="columns"
            >
              <InputText
                className="institution-code is-3"
                name="occurrenceForm.observationData.institutionCode"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field institution-code is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.institutionCode.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
              <InputText
                className="collection-code is-3"
                name="occurrenceForm.observationData.collectionCode"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field collection-code is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.collectionCode.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
            </div>
            <div
              className="columns"
            >
              <InputText
                className="field-number is-3"
                name="occurrenceForm.observationData.fieldNumber"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field field-number is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.fieldNumber.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
              <InputText
                className="catalog-number is-3"
                name="occurrenceForm.observationData.catalogNumber"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field catalog-number is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.catalogNumber.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
              <InputText
                className="record-number is-3"
                name="occurrenceForm.observationData.recordNumber"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field record-number is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.recordNumber.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
            </div>
            <div
              className="columns"
            >
              <InputMultipleText
                className="identified-by is-3"
                name="occurrenceForm.observationData.identifiedBy"
                onChange={[Function]}
                values={Array []}
              >
                <div
                  className="column field identified-by is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.identifiedBy.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="occurrenceForm.observationData.identifiedBy.placeholder"
                    type="text"
                    value=""
                  />
                  <p
                    className="help"
                  >
                    occurrenceForm.observationData.identifiedBy.help
                  </p>
                  <Tags
                    onDelete={[Function]}
                    strings={Array []}
                  >
                    <div
                      className="block"
                    />
                  </Tags>
                </div>
              </InputMultipleText>
              <InputMultipleText
                className="recorded-by is-3"
                name="occurrenceForm.observationData.recordedBy"
                onChange={[Function]}
                values={Array []}
              >
                <div
                  className="column field recorded-by is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.recordedBy.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="occurrenceForm.observationData.recordedBy.placeholder"
                    type="text"
                    value=""
                  />
                  <p
                    className="help"
                  >
                    occurrenceForm.observationData.recordedBy.help
                  </p>
                  <Tags
                    onDelete={[Function]}
                    strings={Array []}
                  >
                    <div
                      className="block"
                    />
                  </Tags>
                </div>
              </InputMultipleText>
            </div>
            <div
              className="columns"
            >
              <InputText
                className="identification-qualifier is-9"
                name="occurrenceForm.observationData.identificationQualifier"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field identification-qualifier is-9"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.identificationQualifier.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
            </div>
            <div
              className="columns"
            >
              <Textarea
                className="identification-remarks is-9"
                name="occurrenceForm.observationData.identificationRemarks"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field identification-remarks is-9"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.identificationRemarks.label
                  </label>
                  <textarea
                    className="textarea"
                    onChange={[Function]}
                    rows={5}
                    value=""
                  />
                </div>
              </Textarea>
            </div>
            <div
              className="columns"
            >
              <InputMultipleText
                className="references is-9"
                labelComponent={[Function]}
                name="occurrenceForm.observationData.references"
                onChange={[Function]}
                values={Array []}
              >
                <div
                  className="column field references is-9"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.references.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="occurrenceForm.observationData.references.placeholder"
                    type="text"
                    value=""
                  />
                  <p
                    className="help"
                  >
                    occurrenceForm.observationData.references.help
                  </p>
                  <Tags
                    labelComponent={[Function]}
                    onDelete={[Function]}
                    strings={Array []}
                  >
                    <div
                      className="block"
                    />
                  </Tags>
                </div>
              </InputMultipleText>
            </div>
            <CopyPreviousData>
              <div
                className="columns"
              >
                <div
                  className="copy-previous-data column is-narrow"
                >
                  copy data from previous entry
                </div>
              </div>
            </CopyPreviousData>
          </div>
        </ObservationData>
      </StepHeader>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={Array []}
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm renders correctly 3`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.dataset.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifestage={null}
            occurrenceStatus="present"
            scientificName=""
            sex={null}
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.occurrenceData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifestage={null}
              occurrenceStatus="present"
              scientificName=""
              sex={null}
            >
              <div>
                 29 April 2019 
              </div>
            </OccurrenceDataSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.locationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <div>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </div>
              <div>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </div>
            </SelectedLocation>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.observationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            Institution: institution code; Identified by: Indiana Jones
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={Array []}
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
        <MeasurementOrFact
          data={Array []}
          onChange={[Function]}
        >
          <div
            className="measurement-or-fact section is-fluid"
          >
            <div
              className="columns"
            >
              <div
                className="column is-half"
              >
                <h1
                  className="title"
                >
                  occurrenceForm.measurementOrFact.general.title
                </h1>
                <h2
                  className="subtitle"
                >
                  occurrenceForm.measurementOrFact.general.subtitle
                </h2>
                <table
                  className="general table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        common.type
                      </th>
                      <th
                        style={
                          Object {
                            "width": "20%",
                          }
                        }
                      >
                        common.unit
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      >
                        common.value
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody>
                    <MeasurementRow
                      key="Pressure"
                      onClickAdd={[Function]}
                      type="Pressure"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Pressure
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Decibars",
                              ]
                            }
                            value="Decibars"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Decibars
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Decibars"
                                    onClick={[Function]}
                                  >
                                    Decibars
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Temperature"
                      onClickAdd={[Function]}
                      type="Temperature"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPAA",
                            "name": "Degrees Celsius",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Temperature
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Degrees Celsius",
                              ]
                            }
                            value="Degrees Celsius"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Degrees Celsius
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Degrees Celsius"
                                    onClick={[Function]}
                                  >
                                    Degrees Celsius
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Salinity"
                      onClickAdd={[Function]}
                      type="Salinity"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGKG",
                            "name": "Grams per kilogram",
                          },
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                            "name": "PSU (dimensionless)",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Salinity
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Grams per kilogram",
                                "PSU (dimensionless)",
                              ]
                            }
                            value="Grams per kilogram"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Grams per kilogram
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Grams per kilogram"
                                    onClick={[Function]}
                                  >
                                    Grams per kilogram
                                  </div>
                                  <div
                                    className="dropdown-item"
                                    key="PSU (dimensionless)"
                                    onClick={[Function]}
                                  >
                                    PSU (dimensionless)
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                  </tbody>
                </table>
                <h1
                  className="title"
                >
                  occurrenceForm.measurementOrFact.specific.title
                </h1>
                <h2
                  className="subtitle"
                >
                  occurrenceForm.measurementOrFact.specific.subtitle
                </h2>
                <table
                  className="specific table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        common.type
                      </th>
                      <th
                        style={
                          Object {
                            "width": "20%",
                          }
                        }
                      >
                        common.unit
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      >
                        common.value
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody>
                    <MeasurementRow
                      key="ObservedIndividualCount"
                      onClickAdd={[Function]}
                      type="ObservedIndividualCount"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                            "name": "Dimensionless",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          ObservedIndividualCount
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Dimensionless",
                              ]
                            }
                            value="Dimensionless"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Dimensionless
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Dimensionless"
                                    onClick={[Function]}
                                  >
                                    Dimensionless
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance category of biological entity specified elsewhere"
                      onClickAdd={[Function]}
                      type="Abundance category of biological entity specified elsewhere"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                            "name": "Dimensionless",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance category of biological entity specified elsewhere
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Dimensionless",
                              ]
                            }
                            value="Dimensionless"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Dimensionless
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Dimensionless"
                                    onClick={[Function]}
                                  >
                                    Dimensionless
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance of biological entity specified elsewhere per unit area of the bed"
                      onClickAdd={[Function]}
                      type="Abundance of biological entity specified elsewhere per unit area of the bed"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMS/",
                            "name": "Number per square meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance of biological entity specified elsewhere per unit area of the bed
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Number per square meter",
                              ]
                            }
                            value="Number per square meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Number per square meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Number per square meter"
                                    onClick={[Function]}
                                  >
                                    Number per square meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance of biological entity specified elsewhere per unit volume of the sediment"
                      onClickAdd={[Function]}
                      type="Abundance of biological entity specified elsewhere per unit volume of the sediment"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMM/",
                            "name": "Number per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance of biological entity specified elsewhere per unit volume of the sediment
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Number per cubic meter",
                              ]
                            }
                            value="Number per cubic meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Number per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Number per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Number per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance of biological entity specified elsewhere per unit volume of the water body"
                      onClickAdd={[Function]}
                      type="Abundance of biological entity specified elsewhere per unit volume of the water body"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMM/",
                            "name": "Number per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance of biological entity specified elsewhere per unit volume of the water body
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Number per cubic meter",
                              ]
                            }
                            value="Number per cubic meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Number per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Number per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Number per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment"
                      onClickAdd={[Function]}
                      type="Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMC/",
                            "name": "Milligrams per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Milligrams per cubic meter",
                              ]
                            }
                            value="Milligrams per cubic meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Milligrams per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Milligrams per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Milligrams per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed"
                      onClickAdd={[Function]}
                      type="Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMS/",
                            "name": "Milligrams per square meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Milligrams per square meter",
                              ]
                            }
                            value="Milligrams per square meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Milligrams per square meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Milligrams per square meter"
                                    onClick={[Function]}
                                  >
                                    Milligrams per square meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body"
                      onClickAdd={[Function]}
                      type="Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMC/",
                            "name": "Milligrams per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Milligrams per cubic meter",
                              ]
                            }
                            value="Milligrams per cubic meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Milligrams per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Milligrams per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Milligrams per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Length of biological entity specified elsewhere"
                      onClickAdd={[Function]}
                      type="Length of biological entity specified elsewhere"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/KGXX/",
                            "name": "Meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Length of biological entity specified elsewhere
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Meter",
                              ]
                            }
                            value="Meter"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Meter"
                                    onClick={[Function]}
                                  >
                                    Meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Specimen weight of biological entity specified elsewhere"
                      onClickAdd={[Function]}
                      type="Specimen weight of biological entity specified elsewhere"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGRM/",
                            "name": "Grams",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Specimen weight of biological entity specified elsewhere
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Grams",
                              ]
                            }
                            value="Grams"
                          >
                            <div
                              className="dropdown"
                              onClick={[Function]}
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Grams
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Grams"
                                    onClick={[Function]}
                                  >
                                    Grams
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                  </tbody>
                </table>
              </div>
              <div
                className="column is-half supplied"
              >
                <h1
                  className="title"
                >
                  occurrenceForm.measurementOrFact.supplied.title
                </h1>
                <h2
                  className="subtitle"
                >
                   
                </h2>
                <table
                  className="supplied table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        common.type
                      </th>
                      <th
                        style={
                          Object {
                            "width": "20%",
                          }
                        }
                      >
                        common.unit
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      >
                        common.value
                      </th>
                      <th
                        style={
                          Object {
                            "width": "5%",
                          }
                        }
                      />
                      <th
                        style={
                          Object {
                            "width": "5%",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>
            </div>
            <CopyPreviousData>
              <div
                className="columns"
              >
                <div
                  className="copy-previous-data column is-narrow"
                >
                  copy data from previous entry
                </div>
              </div>
            </CopyPreviousData>
          </div>
        </MeasurementOrFact>
      </StepHeader>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm renders correctly 4`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.dataset.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifestage={null}
            occurrenceStatus="present"
            scientificName=""
            sex={null}
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.occurrenceData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifestage={null}
              occurrenceStatus="present"
              scientificName=""
              sex={null}
            >
              <div>
                 29 April 2019 
              </div>
            </OccurrenceDataSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.locationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <div>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </div>
              <div>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </div>
            </SelectedLocation>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.observationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            Institution: institution code; Identified by: Indiana Jones
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <MeasurementOrFactSummary
            data={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
              ]
            }
          />
        }
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.measurementOrFact.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <MeasurementOrFactSummary
              data={
                Array [
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "10",
                  },
                ]
              }
            >
              <div>
                occurrenceForm.measurementOrFact.step.title {"number":1}
              </div>
            </MeasurementOrFactSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
        <DarwinCoreFields
          fields={Array []}
          onChange={[Function]}
        >
          <div
            className="darwin-core-fields section is-fluid"
          >
            <h1
              className="title"
            >
              occurrenceForm.darwinCoreFields.title
            </h1>
            <h2
              className="subtitle"
            >
              occurrenceForm.darwinCoreFields.subtitle
               
              occurrenceForm.darwinCoreFields.tip
            </h2>
            <div
              className="columns is-grouped"
            >
              <InputText
                className="is-3 field-name"
                name="occurrenceForm.darwinCoreFields.fieldName"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 field-name"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.darwinCoreFields.fieldName.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <InputText
                className="is-3 value"
                name="occurrenceForm.darwinCoreFields.value"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 value"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.darwinCoreFields.value.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <div
                className="column add"
              >
                <span
                  className="label"
                >
                   
                </span>
                <button
                  className="button"
                  onClick={[Function]}
                >
                  common.add
                </button>
              </div>
            </div>
            <table
              className="table is-fullwidth"
            >
              <thead>
                <tr>
                  <th>
                    common.name
                  </th>
                  <th>
                    common.value
                  </th>
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </DarwinCoreFields>
      </StepHeader>
    </ActiveStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm renders correctly 5`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.dataset.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifestage={null}
            occurrenceStatus="present"
            scientificName=""
            sex={null}
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.occurrenceData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifestage={null}
              occurrenceStatus="present"
              scientificName=""
              sex={null}
            >
              <div>
                 29 April 2019 
              </div>
            </OccurrenceDataSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.locationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <div>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </div>
              <div>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </div>
            </SelectedLocation>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.observationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            Institution: institution code; Identified by: Indiana Jones
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <MeasurementOrFactSummary
            data={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
              ]
            }
          />
        }
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.measurementOrFact.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <MeasurementOrFactSummary
              data={
                Array [
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "10",
                  },
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "20",
                  },
                ]
              }
            >
              <div>
                occurrenceForm.measurementOrFact.step.title {"number":2}
              </div>
            </MeasurementOrFactSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
        <DarwinCoreFields
          fields={Array []}
          onChange={[Function]}
        >
          <div
            className="darwin-core-fields section is-fluid"
          >
            <h1
              className="title"
            >
              occurrenceForm.darwinCoreFields.title
            </h1>
            <h2
              className="subtitle"
            >
              occurrenceForm.darwinCoreFields.subtitle
               
              occurrenceForm.darwinCoreFields.tip
            </h2>
            <div
              className="columns is-grouped"
            >
              <InputText
                className="is-3 field-name"
                name="occurrenceForm.darwinCoreFields.fieldName"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 field-name"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.darwinCoreFields.fieldName.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <InputText
                className="is-3 value"
                name="occurrenceForm.darwinCoreFields.value"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 value"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.darwinCoreFields.value.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <div
                className="column add"
              >
                <span
                  className="label"
                >
                   
                </span>
                <button
                  className="button"
                  onClick={[Function]}
                >
                  common.add
                </button>
              </div>
            </div>
            <table
              className="table is-fullwidth"
            >
              <thead>
                <tr>
                  <th>
                    common.name
                  </th>
                  <th>
                    common.value
                  </th>
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </DarwinCoreFields>
      </StepHeader>
    </ActiveStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm renders correctly 6`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.dataset.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifestage={null}
            occurrenceStatus="present"
            scientificName=""
            sex={null}
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.occurrenceData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifestage={null}
              occurrenceStatus="present"
              scientificName=""
              sex={null}
            >
              <div>
                 29 April 2019 
              </div>
            </OccurrenceDataSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.locationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <div>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </div>
              <div>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </div>
            </SelectedLocation>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.observationData.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            Institution: institution code; Identified by: Indiana Jones
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <MeasurementOrFactSummary
            data={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
              ]
            }
          />
        }
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b>
                occurrenceForm.measurementOrFact.step.dataDescription
              </b>
            </p>
          </div>
          <div
            className="column is-7 is-size-5"
          >
            <MeasurementOrFactSummary
              data={
                Array [
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "10",
                  },
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "20",
                  },
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "20",
                  },
                ]
              }
            >
              <div>
                occurrenceForm.measurementOrFact.step.title {"number":3}
              </div>
            </MeasurementOrFactSummary>
          </div>
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
        <DarwinCoreFields
          fields={Array []}
          onChange={[Function]}
        >
          <div
            className="darwin-core-fields section is-fluid"
          >
            <h1
              className="title"
            >
              occurrenceForm.darwinCoreFields.title
            </h1>
            <h2
              className="subtitle"
            >
              occurrenceForm.darwinCoreFields.subtitle
               
              occurrenceForm.darwinCoreFields.tip
            </h2>
            <div
              className="columns is-grouped"
            >
              <InputText
                className="is-3 field-name"
                name="occurrenceForm.darwinCoreFields.fieldName"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 field-name"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.darwinCoreFields.fieldName.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <InputText
                className="is-3 value"
                name="occurrenceForm.darwinCoreFields.value"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 value"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.darwinCoreFields.value.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <div
                className="column add"
              >
                <span
                  className="label"
                >
                   
                </span>
                <button
                  className="button"
                  onClick={[Function]}
                >
                  common.add
                </button>
              </div>
            </div>
            <table
              className="table is-fullwidth"
            >
              <thead>
                <tr>
                  <th>
                    common.name
                  </th>
                  <th>
                    common.value
                  </th>
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </DarwinCoreFields>
      </StepHeader>
    </ActiveStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm renders correctly 7`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <NotConfirmedStepHeader
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project."
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-1 background-color-0"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-1 background-color-0"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                1 - occurrenceForm.dataset.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifestage={null}
          occurrenceStatus="present"
          scientificName=""
          sex={null}
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-2 background-color-5"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                2 - occurrenceForm.occurrenceData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-3 background-color-10"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                3 - occurrenceForm.locationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-4 background-color-15"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                4 - occurrenceForm.observationData.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                5 - occurrenceForm.measurementOrFact.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <div
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="is-size-5 is-uppercase"
            >
              <b />
            </p>
          </div>
          <div
            className="column is-7 is-size-5 is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <div
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </div>
            <div
              className="is-size-5 is-uppercase"
            >
              <b
                className="step-title"
              >
                6 - occurrenceForm.darwinCoreFields.step.stepTitle
              </b>
            </div>
          </div>
        </div>
      </StepHeader>
    </NotConfirmedStepHeader>
    <FinalSummary
      darwinCoreFields={
        Array [
          Object {
            "name": "name-1",
            "value": "value-1",
          },
          Object {
            "name": "name-3",
            "value": "value-3",
          },
        ]
      }
      dataset={
        Object {
          "description": "HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.",
          "id": 0,
        }
      }
      locationData={
        Object {
          "coordinateUncertainty": null,
          "decimalLatitude": 0.12345,
          "decimalLongitude": -0.54321,
          "maximumDepth": null,
          "minimumDepth": null,
          "verbatimCoordinates": "",
          "verbatimDepth": "",
        }
      }
      measurements={
        Array [
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "10",
          },
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "20",
          },
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "20",
          },
        ]
      }
      observationData={
        Object {
          "catalogNumber": "",
          "collectionCode": "",
          "fieldNumber": "",
          "identificationQualifier": "",
          "identificationRemarks": "",
          "identifiedBy": Array [
            "Indiana Jones",
          ],
          "institutionCode": "institution code",
          "recordNumber": "",
          "recordedBy": Array [],
          "references": Array [],
        }
      }
      occurrenceData={
        Object {
          "basisOfRecord": "humanObservation",
          "beginDate": 1556496000000,
          "endDate": null,
          "lifestage": null,
          "occurrenceStatus": "present",
          "scientificName": "",
          "sex": null,
        }
      }
      onChangeClick={[Function]}
      onSubmitClick={[Function]}
    >
      <div
        className="final-summary section is-fluid"
      >
        <div
          className="columns is-centered"
        >
          <h1
            className="final-summary-title title is-3"
          >
            occurrenceForm.finalSummary.title
          </h1>
        </div>
        <SubmitEntryButton
          onClick={[Function]}
        >
          <div
            className="submit-entry-button columns is-centered"
          >
            <button
              className="button is-info is-medium"
              onClick={[Function]}
            >
              occurrenceForm.finalSummary.submitEntryButton
            </button>
          </div>
        </SubmitEntryButton>
        <section
          className="dataset-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              1 - 
              occurrenceForm.dataset.step.stepTitle
            </h2>
          </SectionTitle>
          <p>
            HAB Region 2: Occurrences of harmful (toxic) algal taxa within an area of interest to El Salvador compiled as part of a literature search project.
          </p>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="occurrence-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              2 - 
              occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.occurrenceData.scientificName"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.scientificName
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.eventBeginDate"
                value="29 April 2019"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.eventBeginDate
                  </td>
                  <td
                    className="value"
                  >
                    29 April 2019
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.eventEndDate"
                value="1 January 1970"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.eventEndDate
                  </td>
                  <td
                    className="value"
                  >
                    1 January 1970
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.occurrenceStatus.title"
                value="occurrenceForm.occurrenceData.occurrenceStatus.present"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.occurrenceStatus.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.occurrenceStatus.present
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.basisOfRecord.title"
                value="occurrenceForm.occurrenceData.basisOfRecord.humanObservation"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.basisOfRecord.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.basisOfRecord.humanObservation
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.sex.title"
                value="occurrenceForm.occurrenceData.sex.null"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.sex.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.sex.null
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.lifestage.title"
                value="occurrenceForm.occurrenceData.lifestage.null"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.lifestage.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.lifestage.null
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="location-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              3 - 
              occurrenceForm.locationData.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.locationData.decimalLatitude.label"
                value={0.12345}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.decimalLatitude.label
                  </td>
                  <td
                    className="value"
                  >
                    0.12345
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.decimalLongitude.label"
                value={-0.54321}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.decimalLongitude.label
                  </td>
                  <td
                    className="value"
                  >
                    -0.54321
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.coordinateUncertainty.label"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.coordinateUncertainty.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.minimumDepth.label"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.minimumDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.maximumDepth.label"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.maximumDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.locationData.verbatimDataSubtitle
            </h2>
          </SectionSubtitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <tbody>
              <NameValueRow
                name="occurrenceForm.locationData.verbatimCoordinates.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.verbatimCoordinates.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.verbatimDepth.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.verbatimDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="observation-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              4 - 
              occurrenceForm.observationData.step.stepTitle
            </h2>
          </SectionTitle>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.observationData.catalogDataSubtitle
            </h2>
          </SectionSubtitle>
          <div
            className="content"
          >
            <table
              className="table is-striped is-fullwidth is-hoverable"
            >
              <NameValueHeader>
                <thead>
                  <tr>
                    <th
                      className="type"
                    >
                      common.name
                    </th>
                    <th
                      className="value"
                    >
                      common.value
                    </th>
                  </tr>
                </thead>
              </NameValueHeader>
              <tbody>
                <NameValueRow
                  name="occurrenceForm.observationData.institutionCode.label"
                  value="institution code"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.institutionCode.label
                    </td>
                    <td
                      className="value"
                    >
                      institution code
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.collectionCode.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.collectionCode.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.fieldNumber.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.fieldNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.catalogNumber.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.catalogNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.recordNumber.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.recordNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
              </tbody>
            </table>
            <div
              className="columns"
            >
              <div
                className="column is-3"
              >
                <p
                  className="title is-5"
                >
                  occurrenceForm.observationData.identifiedBy.label
                </p>
                <ul>
                  <li
                    key="Indiana Jones"
                  >
                    Indiana Jones
                  </li>
                </ul>
              </div>
              <div
                className="column is-3"
              >
                <p
                  className="title is-5"
                >
                  occurrenceForm.observationData.recordedBy.label
                </p>
                <ul />
              </div>
            </div>
          </div>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.observationData.speciesDataSubtitle
            </h2>
          </SectionSubtitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.observationData.references.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.references.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.observationData.identificationQualifier.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.identificationQualifier.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.observationData.identificationRemarks.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.identificationRemarks.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="measurement-or-fact-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              5 - 
              occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="measurements table is-fullwidth is-striped is-hoverable"
          >
            <thead>
              <tr>
                <th
                  className="type"
                >
                  common.type
                </th>
                <th
                  className="name"
                >
                  common.name
                </th>
                <th
                  className="value"
                >
                  common.value
                </th>
              </tr>
            </thead>
            <tbody>
              <tr
                className="fieldrow"
                key="0"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  10
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="1"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  20
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="2"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  20
                </td>
              </tr>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="darwin-core-fields-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              6 - 
              occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                key="0"
                name="name-1"
                value="value-1"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    name-1
                  </td>
                  <td
                    className="value"
                  >
                    value-1
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="1"
                name="name-3"
                value="value-3"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    name-3
                  </td>
                  <td
                    className="value"
                  >
                    value-3
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <SubmitEntryButton
          onClick={[Function]}
        >
          <div
            className="submit-entry-button columns is-centered"
          >
            <button
              className="button is-info is-medium"
              onClick={[Function]}
            >
              occurrenceForm.finalSummary.submitEntryButton
            </button>
          </div>
        </SubmitEntryButton>
      </div>
    </FinalSummary>
  </section>
</OccurrenceForm>
`;
