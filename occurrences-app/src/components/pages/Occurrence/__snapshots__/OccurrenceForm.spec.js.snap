// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OccurrenceForm when creating new occurrence and then clicking "Review and Submit" button renders correctly 1`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-1 background-color-0"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-1 background-color-0"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-2 background-color-5"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-3 background-color-10"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-4 background-color-15"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <FinalSummary
      darwinCoreFields={
        Array [
          Object {
            "name": "name-1",
            "value": "value-1",
          },
          Object {
            "name": "name-3",
            "value": "value-3",
          },
        ]
      }
      dataset={
        Object {
          "abstract": Object {
            "paragraphs": Array [
              "Population structure data of Caprella species used in the article \\"Hosono T (2014) Temperature explains reproductive dynamics in caprellids at different latitudes. Marine Ecology Progress Series 511:129-141\\"",
            ],
          },
          "contacts": Array [
            Object {
              "individualName": Object {
                "givenName": "Takashi",
                "surName": "Hosono",
              },
            },
          ],
          "creators": Array [
            Object {
              "individualName": Object {
                "givenName": "Takashi",
                "surName": "Hosono",
              },
            },
          ],
          "id": "wEaBfmFyQhYCdsk",
          "keywordSets": Array [
            Object {
              "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
              "keywords": Array [
                "Samplingevent",
              ],
            },
          ],
          "language": "en",
          "license": Object {
            "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
            "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
          },
          "meta": Object {
            "dwcTables": Object {
              "core": "event",
              "extensions": Array [
                "emof",
                "occurrence",
              ],
            },
            "type": "event",
          },
          "metadataProviders": Array [
            Object {
              "electronicMailAddress": "hosonot@jamstec.go.jp",
              "individualName": Object {
                "givenName": "Takashi",
                "surName": "Hosono",
              },
            },
          ],
          "title": Object {
            "language": "en",
            "value": "Caprellids polulation structure in Usujiri, Hokkaido, Japan",
          },
        }
      }
      errorMessage=""
      errorVisible={false}
      locationData={
        Object {
          "coordinateUncertainty": null,
          "decimalLatitude": 0.12345,
          "decimalLongitude": -0.54321,
          "maximumDepth": null,
          "minimumDepth": null,
          "verbatimCoordinates": "",
          "verbatimDepth": "",
        }
      }
      measurements={
        Array [
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "10",
          },
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "20",
          },
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "20",
          },
        ]
      }
      observationData={
        Object {
          "catalogNumber": "",
          "collectionCode": "",
          "fieldNumber": "",
          "identificationQualifier": "",
          "identificationRemarks": "",
          "identifiedBy": Array [
            "Indiana Jones",
          ],
          "institutionCode": "institution code",
          "recordNumber": "",
          "recordedBy": Array [],
          "references": Array [],
        }
      }
      occurrenceData={
        Object {
          "basisOfRecord": "humanObservation",
          "beginDate": 1556496000000,
          "endDate": null,
          "lifeStage": "larva",
          "occurrenceStatus": "present",
          "scientificName": "",
          "sex": "male",
        }
      }
      onChangeClick={[Function]}
      onCreateFreshClick={[Function]}
      onCreateFromThisClick={[Function]}
      onErrorClose={[Function]}
      onSubmitClick={[Function]}
      successMessageType="create"
      successVisible={false}
    >
      <div
        className="final-summary section is-fluid"
      >
        <div
          className="columns is-centered"
        >
          <h1
            className="final-summary-title title is-3"
          >
            occurrenceForm.finalSummary.title
          </h1>
        </div>
        <SubmitEntryButton
          onClick={[Function]}
        >
          <div
            className="submit-entry-button columns is-mobile is-centered"
          >
            <button
              className="button is-info is-medium"
              onClick={[Function]}
            >
              common.submit
            </button>
          </div>
        </SubmitEntryButton>
        <section
          className="dataset-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              1 - 
              occurrenceForm.dataset.step.stepTitle
            </h2>
          </SectionTitle>
          <p>
            Caprellids polulation structure in Usujiri, Hokkaido, Japan
          </p>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="occurrence-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              2 - 
              occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.occurrenceData.scientificName"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.scientificName
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.eventBeginDate"
                value="29 April 2019"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.eventBeginDate
                  </td>
                  <td
                    className="value"
                  >
                    29 April 2019
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.eventEndDate"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.eventEndDate
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.occurrenceStatus.title"
                value="occurrenceForm.occurrenceData.occurrenceStatus.present"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.occurrenceStatus.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.occurrenceStatus.present
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.basisOfRecord.title"
                value="occurrenceForm.occurrenceData.basisOfRecord.humanObservation"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.basisOfRecord.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.basisOfRecord.humanObservation
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.sex.title"
                value="occurrenceForm.occurrenceData.sex.male"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.sex.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.sex.male
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.lifeStage.title"
                value="occurrenceForm.occurrenceData.lifeStage.larva"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.lifeStage.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.lifeStage.larva
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="location-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              3 - 
              occurrenceForm.locationData.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.locationData.decimalLatitude.label"
                value={0.12345}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.decimalLatitude.label
                  </td>
                  <td
                    className="value"
                  >
                    0.12345
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.decimalLongitude.label"
                value={-0.54321}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.decimalLongitude.label
                  </td>
                  <td
                    className="value"
                  >
                    -0.54321
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.coordinateUncertainty.label"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.coordinateUncertainty.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.minimumDepth.label"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.minimumDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.maximumDepth.label"
                value={null}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.maximumDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.locationData.verbatimDataSubtitle
            </h2>
          </SectionSubtitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <tbody>
              <NameValueRow
                name="occurrenceForm.locationData.verbatimCoordinates.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.verbatimCoordinates.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.verbatimDepth.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.verbatimDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="observation-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              4 - 
              occurrenceForm.observationData.step.stepTitle
            </h2>
          </SectionTitle>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.observationData.catalogDataSubtitle
            </h2>
          </SectionSubtitle>
          <div
            className="content"
          >
            <table
              className="table is-striped is-fullwidth is-hoverable"
            >
              <NameValueHeader>
                <thead>
                  <tr>
                    <th
                      className="type"
                    >
                      common.name
                    </th>
                    <th
                      className="value"
                    >
                      common.value
                    </th>
                  </tr>
                </thead>
              </NameValueHeader>
              <tbody>
                <NameValueRow
                  name="occurrenceForm.observationData.institutionCode.label"
                  value="institution code"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.institutionCode.label
                    </td>
                    <td
                      className="value"
                    >
                      institution code
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.collectionCode.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.collectionCode.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.fieldNumber.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.fieldNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.catalogNumber.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.catalogNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.recordNumber.label"
                  value=""
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.recordNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      —
                    </td>
                  </tr>
                </NameValueRow>
              </tbody>
            </table>
            <div
              className="columns"
            >
              <div
                className="column is-3"
              >
                <p
                  className="title is-5"
                >
                  occurrenceForm.observationData.identifiedBy.label
                </p>
                <ul>
                  <li
                    key="Indiana Jones"
                  >
                    Indiana Jones
                  </li>
                </ul>
              </div>
              <div
                className="column is-3"
              >
                <p
                  className="title is-5"
                >
                  occurrenceForm.observationData.recordedBy.label
                </p>
                <ul />
              </div>
            </div>
          </div>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.observationData.speciesDataSubtitle
            </h2>
          </SectionSubtitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.observationData.references.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.references.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.observationData.identificationQualifier.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.identificationQualifier.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.observationData.identificationRemarks.label"
                value=""
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.identificationRemarks.label
                  </td>
                  <td
                    className="value"
                  >
                    —
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="measurement-or-fact-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              5 - 
              occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="measurements table is-fullwidth is-striped is-hoverable"
          >
            <thead>
              <tr>
                <th
                  className="type"
                >
                  common.type
                </th>
                <th
                  className="name"
                >
                  common.name
                </th>
                <th
                  className="value"
                >
                  common.value
                </th>
              </tr>
            </thead>
            <tbody>
              <tr
                className="fieldrow"
                key="0"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  10
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="1"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  20
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="2"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  20
                </td>
              </tr>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="darwin-core-fields-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              6 - 
              occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                key="0"
                name="name-1"
                value="value-1"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    name-1
                  </td>
                  <td
                    className="value"
                  >
                    value-1
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="1"
                name="name-3"
                value="value-3"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    name-3
                  </td>
                  <td
                    className="value"
                  >
                    value-3
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <SubmitEntryButton
          onClick={[Function]}
        >
          <div
            className="submit-entry-button columns is-mobile is-centered"
          >
            <button
              className="button is-info is-medium"
              onClick={[Function]}
            >
              common.submit
            </button>
          </div>
        </SubmitEntryButton>
      </div>
    </FinalSummary>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 1`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ActiveStepHeader
      activeStepIndex={0}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
        <Dataset
          datasets={
            Array [
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "Population structure data of Caprella species used in the article \\"Hosono T (2014) Temperature explains reproductive dynamics in caprellids at different latitudes. Marine Ecology Progress Series 511:129-141\\"",
                  ],
                },
                "contacts": Array [
                  Object {
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "creators": Array [
                  Object {
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "id": "wEaBfmFyQhYCdsk",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Samplingevent",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "event",
                    "extensions": Array [
                      "emof",
                      "occurrence",
                    ],
                  },
                  "type": "event",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "hosonot@jamstec.go.jp",
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Caprellids polulation structure in Usujiri, Hokkaido, Japan",
                },
              },
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "The data were collected in the Azov Sea during a cruise on board of R/V N. Danilevskiy in 1935. This dataset contains abundance data (individuals per m²) and biomass data (g/m²) for benthic taxa. No additional metadata is available.",
                    "This dataset was rescued through data archaeology activities in the framework of the EMODnet Biology data grants.",
                  ],
                },
                "contacts": Array [
                  Object {
                    "electronicMailAddress": "o.sergeyeva@gsva.net",
                    "individualName": Object {
                      "givenName": "Oleksandra",
                      "surName": "Sergeyeva",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                  },
                ],
                "creators": Array [
                  Object {
                    "electronicMailAddress": "director@ibss.iuf.net",
                    "individualName": Object {
                      "givenName": "Yu. B.",
                      "surName": "Belogurova",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                  },
                  Object {
                    "electronicMailAddress": "o.sergeyeva@gsva.net",
                    "individualName": Object {
                      "givenName": "Oleksandra",
                      "surName": "Sergeyeva",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                  },
                ],
                "id": "ntDOtUc7XsRrIus",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Occurrence",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                    "keywords": Array [
                      "Observation",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "occurrence",
                    "extensions": Array [
                      "emof",
                    ],
                  },
                  "type": "occurrence",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "info@eurobis.org",
                    "individualName": Object {
                      "surName": "EurOBIS Data Management Team",
                    },
                    "organizationName": "Flanders Marine Institute (VLIZ)",
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\"",
                },
              },
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "An annotated check-list is given of Antipatharia species occurring deeper than 2000 m in the seas bordering Europe.",
                    "The check-list is based on published data. It includes 12 species. For each species synonymy, data on localities in European seas and general species distribution are provided. Only distributions for which geographic coordinates are availlable were retained, as these are made available through EurOBIS.",
                  ],
                },
                "contacts": Array [
                  Object {
                    "electronicMailAddress": "tina@ocean.ru",
                    "individualName": Object {
                      "givenName": "Tina",
                      "surName": "Molodtsova",
                    },
                    "organizationName": "Russian Academy of Sciences P. P. Shirshov Institute of Oceanology (RAS-SIO RAS)",
                  },
                ],
                "creators": Array [
                  Object {
                    "electronicMailAddress": "tina@ocean.ru",
                    "individualName": Object {
                      "givenName": "Tina",
                      "surName": "Molodtsova",
                    },
                    "organizationName": "Russian Academy of Sciences P. P. Shirshov Institute of Oceanology (RAS-SIO RAS)",
                  },
                ],
                "id": "PoJnGNMaxsupE4w",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Occurrence",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                    "keywords": Array [
                      "Observation",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "occurrence",
                    "extensions": Array [
                      "emof",
                    ],
                  },
                  "type": "occurrence",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "info@eurobis.org",
                    "individualName": Object {
                      "surName": "EurOBIS Data Management Team",
                    },
                    "organizationName": "Flanders Marine Institute (VLIZ)",
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Antipatharia distribution data from: Deep-sea fauna of European seas - an annotated species check-list of benthic invertebrates living deeper than 2000 m in the seas bordering Europe",
                },
              },
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "paragraph-1",
                    "paragraph-2",
                  ],
                },
                "contacts": Array [
                  Object {
                    "electronicMailAddress": "arvanitidis@her.hcmr.gr",
                    "individualName": Object {
                      "givenName": "Christos",
                      "surName": "Arvanitidis",
                    },
                    "organizationName": "Hellenic Centre for Marine Research (HCMR)",
                  },
                ],
                "creators": Array [
                  Object {
                    "electronicMailAddress": "arvanitidis@her.hcmr.gr",
                    "individualName": Object {
                      "givenName": "Christos",
                      "surName": "Arvanitidis",
                    },
                    "organizationName": "Hellenic Centre for Marine Research (HCMR)",
                  },
                  Object {
                    "organizationName": "Hellenic Centre for Marine Research (HCMR)",
                  },
                  Object {
                    "electronicMailAddress": "alexpet@ibss.iuf.net",
                    "individualName": Object {
                      "givenName": "Alexei",
                      "surName": "Petrov",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS",
                  },
                ],
                "id": "NnqVLwIyPn-nRkc",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Occurrence",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                    "keywords": Array [
                      "Observation",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "ASFA",
                    "keywords": Array [
                      "Benthic biomass",
                      "Benthos",
                      "Data",
                      "Marine Genomics",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "occurrence",
                    "extensions": Array [
                      "emof",
                    ],
                  },
                  "type": "occurrence",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "info@eurobis.org",
                    "individualName": Object {
                      "surName": "EurOBIS Data Management Team",
                    },
                    "organizationName": "Flanders Marine Institute (VLIZ)",
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Benthic data from Sevastopol (Black Sea)",
                },
              },
            ]
          }
          onChange={[Function]}
          selectedDataset={
            Object {
              "abstract": Object {
                "paragraphs": Array [
                  "Population structure data of Caprella species used in the article \\"Hosono T (2014) Temperature explains reproductive dynamics in caprellids at different latitudes. Marine Ecology Progress Series 511:129-141\\"",
                ],
              },
              "contacts": Array [
                Object {
                  "individualName": Object {
                    "givenName": "Takashi",
                    "surName": "Hosono",
                  },
                },
              ],
              "creators": Array [
                Object {
                  "individualName": Object {
                    "givenName": "Takashi",
                    "surName": "Hosono",
                  },
                },
              ],
              "id": "wEaBfmFyQhYCdsk",
              "keywordSets": Array [
                Object {
                  "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                  "keywords": Array [
                    "Samplingevent",
                  ],
                },
              ],
              "language": "en",
              "license": Object {
                "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
                "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
              },
              "meta": Object {
                "dwcTables": Object {
                  "core": "event",
                  "extensions": Array [
                    "emof",
                    "occurrence",
                  ],
                },
                "type": "event",
              },
              "metadataProviders": Array [
                Object {
                  "electronicMailAddress": "hosonot@jamstec.go.jp",
                  "individualName": Object {
                    "givenName": "Takashi",
                    "surName": "Hosono",
                  },
                },
              ],
              "title": Object {
                "language": "en",
                "value": "Caprellids polulation structure in Usujiri, Hokkaido, Japan",
              },
            }
          }
        >
          <div
            className="dataset is-fluid"
          >
            <table
              className="table is-striped is-fullwidth"
            >
              <tbody>
                <DatasetOption
                  checked={true}
                  id="wEaBfmFyQhYCdsk"
                  key="wEaBfmFyQhYCdsk"
                  onClick={[Function]}
                  title="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={true}
                        name="dataset"
                        onChange={[Function]}
                        value="wEaBfmFyQhYCdsk"
                      >
                        <input
                          checked={true}
                          className="input-radio is-checkradio"
                          id="dataset-wEaBfmFyQhYCdsk"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="wEaBfmFyQhYCdsk"
                        />
                        <label
                          htmlFor="dataset-wEaBfmFyQhYCdsk"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Caprellids polulation structure in Usujiri, Hokkaido, Japan
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  id="ntDOtUc7XsRrIus"
                  key="ntDOtUc7XsRrIus"
                  onClick={[Function]}
                  title="Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\""
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value="ntDOtUc7XsRrIus"
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-ntDOtUc7XsRrIus"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="ntDOtUc7XsRrIus"
                        />
                        <label
                          htmlFor="dataset-ntDOtUc7XsRrIus"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Benthos collected in the Azov Sea in 1935 on board the R/V "N. Danilevskiy"
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  id="PoJnGNMaxsupE4w"
                  key="PoJnGNMaxsupE4w"
                  onClick={[Function]}
                  title="Antipatharia distribution data from: Deep-sea fauna of European seas - an annotated species check-list of benthic invertebrates living deeper than 2000 m in the seas bordering Europe"
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value="PoJnGNMaxsupE4w"
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-PoJnGNMaxsupE4w"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="PoJnGNMaxsupE4w"
                        />
                        <label
                          htmlFor="dataset-PoJnGNMaxsupE4w"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Antipatharia distribution data from: Deep-sea fauna of European seas - an annotated species check-list of benthic invertebrates living deeper than 2000 m in the seas bordering Europe
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  id="NnqVLwIyPn-nRkc"
                  key="NnqVLwIyPn-nRkc"
                  onClick={[Function]}
                  title="Benthic data from Sevastopol (Black Sea)"
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value="NnqVLwIyPn-nRkc"
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-NnqVLwIyPn-nRkc"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="NnqVLwIyPn-nRkc"
                        />
                        <label
                          htmlFor="dataset-NnqVLwIyPn-nRkc"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Benthic data from Sevastopol (Black Sea)
                    </td>
                  </tr>
                </DatasetOption>
              </tbody>
            </table>
          </div>
        </Dataset>
      </StepHeader>
      <StepFooter
        activeStepIndex={0}
        nextStep="occurrenceForm.occurrenceData.step.stepTitle"
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
          <ContinueButton
            name="locationContinue"
            onClick={[Function]}
            value="occurrenceForm.occurrenceData.step.stepTitle"
          >
            <button
              className="continue-button button is-info"
              name="locationContinue"
              onClick={[Function]}
            >
              common.continueTo occurrenceform.occurrencedata.step.steptitle
            </button>
          </ContinueButton>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-2 background-color-5"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={null}
          decimalLongitude={null}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-3 background-color-10"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-4 background-color-15"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={Array []}
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 2`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      activeStepIndex={3}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.dataset.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Caprellids polulation structure in Usujiri, Hokkaido, Japan
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={3}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifeStage="larva"
            occurrenceStatus="present"
            scientificName=""
            sex="male"
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.occurrenceData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifeStage="larva"
              occurrenceStatus="present"
              scientificName=""
              sex="male"
            >
              <span>
                 29 April 2019 
              </span>
            </OccurrenceDataSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={3}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.locationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <span>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </span>
              <span>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </span>
            </SelectedLocation>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      activeStepIndex={3}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
        <ObservationData
          observationData={
            Object {
              "catalogNumber": "",
              "collectionCode": "",
              "fieldNumber": "",
              "identificationQualifier": "",
              "identificationRemarks": "",
              "identifiedBy": Array [],
              "institutionCode": "",
              "recordNumber": "",
              "recordedBy": Array [],
              "references": Array [],
            }
          }
          onChange={[Function]}
        >
          <div
            className="observation-data section is-fluid"
          >
            <div
              className="columns"
            >
              <InputText
                className="institution-code is-3"
                name="occurrenceForm.observationData.institutionCode"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field institution-code is-3"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.institutioncode.label"
                  >
                    occurrenceForm.observationData.institutionCode.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.observationdata.institutioncode.label"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
              <InputText
                className="collection-code is-3"
                name="occurrenceForm.observationData.collectionCode"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field collection-code is-3"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.collectioncode.label"
                  >
                    occurrenceForm.observationData.collectionCode.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.observationdata.collectioncode.label"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
            </div>
            <div
              className="columns"
            >
              <InputText
                className="field-number is-3"
                name="occurrenceForm.observationData.fieldNumber"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field field-number is-3"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.fieldnumber.label"
                  >
                    occurrenceForm.observationData.fieldNumber.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.observationdata.fieldnumber.label"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
              <InputText
                className="catalog-number is-3"
                name="occurrenceForm.observationData.catalogNumber"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field catalog-number is-3"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.catalognumber.label"
                  >
                    occurrenceForm.observationData.catalogNumber.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.observationdata.catalognumber.label"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
              <InputText
                className="record-number is-3"
                name="occurrenceForm.observationData.recordNumber"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field record-number is-3"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.recordnumber.label"
                  >
                    occurrenceForm.observationData.recordNumber.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.observationdata.recordnumber.label"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
            </div>
            <div
              className="columns"
            >
              <InputMultipleText
                className="identified-by is-3"
                name="occurrenceForm.observationData.identifiedBy"
                onChange={[Function]}
                values={Array []}
              >
                <div
                  className="column field identified-by is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.identifiedBy.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="occurrenceForm.observationData.identifiedBy.placeholder"
                    type="text"
                    value=""
                  />
                  <p
                    className="help"
                  >
                    occurrenceForm.observationData.identifiedBy.help
                  </p>
                  <Tags
                    onDelete={[Function]}
                    strings={Array []}
                  >
                    <div
                      className="block"
                    />
                  </Tags>
                </div>
              </InputMultipleText>
              <InputMultipleText
                className="recorded-by is-3"
                name="occurrenceForm.observationData.recordedBy"
                onChange={[Function]}
                values={Array []}
              >
                <div
                  className="column field recorded-by is-3"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.recordedBy.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="occurrenceForm.observationData.recordedBy.placeholder"
                    type="text"
                    value=""
                  />
                  <p
                    className="help"
                  >
                    occurrenceForm.observationData.recordedBy.help
                  </p>
                  <Tags
                    onDelete={[Function]}
                    strings={Array []}
                  >
                    <div
                      className="block"
                    />
                  </Tags>
                </div>
              </InputMultipleText>
            </div>
            <div
              className="columns"
            >
              <InputText
                className="identification-qualifier is-9"
                name="occurrenceForm.observationData.identificationQualifier"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field identification-qualifier is-9"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.identificationqualifier.label"
                  >
                    occurrenceForm.observationData.identificationQualifier.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.observationdata.identificationqualifier.label"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
              </InputText>
            </div>
            <div
              className="columns"
            >
              <Textarea
                className="identification-remarks is-9"
                name="occurrenceForm.observationData.identificationRemarks"
                onChange={[Function]}
                value=""
              >
                <div
                  className="column field identification-remarks is-9"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.observationdata.identificationremarks.label"
                  >
                    occurrenceForm.observationData.identificationRemarks.label
                  </label>
                  <textarea
                    className="textarea"
                    id="occurrenceform.observationdata.identificationremarks.label"
                    onChange={[Function]}
                    rows={5}
                    value=""
                  />
                </div>
              </Textarea>
            </div>
            <div
              className="columns"
            >
              <InputMultipleText
                className="references is-9"
                labelComponent={[Function]}
                name="occurrenceForm.observationData.references"
                onChange={[Function]}
                values={Array []}
              >
                <div
                  className="column field references is-9"
                >
                  <label
                    className="label"
                  >
                    occurrenceForm.observationData.references.label
                  </label>
                  <input
                    className="input"
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="occurrenceForm.observationData.references.placeholder"
                    type="text"
                    value=""
                  />
                  <p
                    className="help"
                  >
                    occurrenceForm.observationData.references.help
                  </p>
                  <Tags
                    labelComponent={[Function]}
                    onDelete={[Function]}
                    strings={Array []}
                  >
                    <div
                      className="block"
                    />
                  </Tags>
                </div>
              </InputMultipleText>
            </div>
          </div>
        </ObservationData>
      </StepHeader>
      <StepFooter
        activeStepIndex={3}
        nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
          <ContinueButton
            name="locationContinue"
            onClick={[Function]}
            value="occurrenceForm.measurementOrFact.step.stepTitle"
          >
            <button
              className="continue-button button is-info"
              name="locationContinue"
              onClick={[Function]}
            >
              common.continueTo occurrenceform.measurementorfact.step.steptitle
            </button>
          </ContinueButton>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={3}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={Array []}
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={3}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 3`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      activeStepIndex={4}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.dataset.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Caprellids polulation structure in Usujiri, Hokkaido, Japan
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={4}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifeStage="larva"
            occurrenceStatus="present"
            scientificName=""
            sex="male"
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.occurrenceData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifeStage="larva"
              occurrenceStatus="present"
              scientificName=""
              sex="male"
            >
              <span>
                 29 April 2019 
              </span>
            </OccurrenceDataSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={4}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.locationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <span>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </span>
              <span>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </span>
            </SelectedLocation>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={4}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.observationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Institution: institution code; Identified by: Indiana Jones
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      activeStepIndex={4}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={Array []}
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
        <MeasurementOrFact
          data={Array []}
          onChange={[Function]}
        >
          <div
            className="measurement-or-fact section is-fluid"
          >
            <div
              className="columns"
            >
              <div
                className="column is-half"
              >
                <h1
                  className="title"
                >
                  occurrenceForm.measurementOrFact.general.title
                </h1>
                <h2
                  className="subtitle"
                >
                  occurrenceForm.measurementOrFact.general.subtitle
                </h2>
                <table
                  className="general table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        common.type
                      </th>
                      <th
                        style={
                          Object {
                            "width": "20%",
                          }
                        }
                      >
                        common.unit
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      >
                        common.value
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody>
                    <MeasurementRow
                      key="Pressure"
                      onAdd={[Function]}
                      type="Pressure"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Pressure
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Decibars",
                              ]
                            }
                            value="Decibars"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Decibars
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Decibars"
                                    onClick={[Function]}
                                  >
                                    Decibars
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Temperature"
                      onAdd={[Function]}
                      type="Temperature"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPAA",
                            "name": "Degrees Celsius",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Temperature
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Degrees Celsius",
                              ]
                            }
                            value="Degrees Celsius"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Degrees Celsius
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Degrees Celsius"
                                    onClick={[Function]}
                                  >
                                    Degrees Celsius
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Salinity"
                      onAdd={[Function]}
                      type="Salinity"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGKG",
                            "name": "Grams per kilogram",
                          },
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                            "name": "PSU (dimensionless)",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Salinity
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Grams per kilogram",
                                "PSU (dimensionless)",
                              ]
                            }
                            value="Grams per kilogram"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Grams per kilogram
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Grams per kilogram"
                                    onClick={[Function]}
                                  >
                                    Grams per kilogram
                                  </div>
                                  <div
                                    className="dropdown-item"
                                    key="PSU (dimensionless)"
                                    onClick={[Function]}
                                  >
                                    PSU (dimensionless)
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                  </tbody>
                </table>
                <h1
                  className="title"
                >
                  occurrenceForm.measurementOrFact.specific.title
                </h1>
                <h2
                  className="subtitle"
                >
                  occurrenceForm.measurementOrFact.specific.subtitle
                </h2>
                <table
                  className="specific table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        common.type
                      </th>
                      <th
                        style={
                          Object {
                            "width": "20%",
                          }
                        }
                      >
                        common.unit
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      >
                        common.value
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody>
                    <MeasurementRow
                      key="ObservedIndividualCount"
                      onAdd={[Function]}
                      type="ObservedIndividualCount"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                            "name": "Dimensionless",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          ObservedIndividualCount
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Dimensionless",
                              ]
                            }
                            value="Dimensionless"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Dimensionless
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Dimensionless"
                                    onClick={[Function]}
                                  >
                                    Dimensionless
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance category of biological entity specified elsewhere"
                      onAdd={[Function]}
                      type="Abundance category of biological entity specified elsewhere"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                            "name": "Dimensionless",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance category of biological entity specified elsewhere
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Dimensionless",
                              ]
                            }
                            value="Dimensionless"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Dimensionless
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Dimensionless"
                                    onClick={[Function]}
                                  >
                                    Dimensionless
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance of biological entity specified elsewhere per unit area of the bed"
                      onAdd={[Function]}
                      type="Abundance of biological entity specified elsewhere per unit area of the bed"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMS/",
                            "name": "Number per square meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance of biological entity specified elsewhere per unit area of the bed
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Number per square meter",
                              ]
                            }
                            value="Number per square meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Number per square meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Number per square meter"
                                    onClick={[Function]}
                                  >
                                    Number per square meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance of biological entity specified elsewhere per unit volume of the sediment"
                      onAdd={[Function]}
                      type="Abundance of biological entity specified elsewhere per unit volume of the sediment"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMM/",
                            "name": "Number per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance of biological entity specified elsewhere per unit volume of the sediment
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Number per cubic meter",
                              ]
                            }
                            value="Number per cubic meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Number per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Number per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Number per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Abundance of biological entity specified elsewhere per unit volume of the water body"
                      onAdd={[Function]}
                      type="Abundance of biological entity specified elsewhere per unit volume of the water body"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMM/",
                            "name": "Number per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Abundance of biological entity specified elsewhere per unit volume of the water body
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Number per cubic meter",
                              ]
                            }
                            value="Number per cubic meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Number per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Number per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Number per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment"
                      onAdd={[Function]}
                      type="Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMC/",
                            "name": "Milligrams per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Milligrams per cubic meter",
                              ]
                            }
                            value="Milligrams per cubic meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Milligrams per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Milligrams per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Milligrams per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed"
                      onAdd={[Function]}
                      type="Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMS/",
                            "name": "Milligrams per square meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Milligrams per square meter",
                              ]
                            }
                            value="Milligrams per square meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Milligrams per square meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Milligrams per square meter"
                                    onClick={[Function]}
                                  >
                                    Milligrams per square meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body"
                      onAdd={[Function]}
                      type="Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMC/",
                            "name": "Milligrams per cubic meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Milligrams per cubic meter",
                              ]
                            }
                            value="Milligrams per cubic meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Milligrams per cubic meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Milligrams per cubic meter"
                                    onClick={[Function]}
                                  >
                                    Milligrams per cubic meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Length of biological entity specified elsewhere"
                      onAdd={[Function]}
                      type="Length of biological entity specified elsewhere"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/KGXX/",
                            "name": "Meter",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Length of biological entity specified elsewhere
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Meter",
                              ]
                            }
                            value="Meter"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Meter
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Meter"
                                    onClick={[Function]}
                                  >
                                    Meter
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                    <MeasurementRow
                      key="Specimen weight of biological entity specified elsewhere"
                      onAdd={[Function]}
                      type="Specimen weight of biological entity specified elsewhere"
                      units={
                        Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGRM/",
                            "name": "Grams",
                          },
                        ]
                      }
                    >
                      <tr
                        className="measurement-row fieldrow"
                      >
                        <td>
                          Specimen weight of biological entity specified elsewhere
                        </td>
                        <td>
                          <Dropdown
                            onChange={[Function]}
                            options={
                              Array [
                                "Grams",
                              ]
                            }
                            value="Grams"
                          >
                            <div
                              className="dropdown"
                            >
                              <div
                                className="dropdown-trigger"
                              >
                                <button
                                  aria-controls="dropdown-menu"
                                  aria-haspopup="true"
                                  className="button"
                                  onClick={[Function]}
                                >
                                  <span
                                    className="selected-value"
                                  >
                                    Grams
                                  </span>
                                  <span
                                    className="icon is-small"
                                  >
                                    <FontAwesomeIcon
                                      className="angle-down"
                                      icon="angle-down"
                                    >
                                      <i
                                        className="angle-down"
                                        icon="angle-down"
                                      />
                                    </FontAwesomeIcon>
                                  </span>
                                </button>
                              </div>
                              <div
                                className="dropdown-menu"
                                id="dropdown-menu"
                                role="menu"
                              >
                                <div
                                  className="dropdown-content"
                                >
                                  <div
                                    className="dropdown-item is-active"
                                    key="Grams"
                                    onClick={[Function]}
                                  >
                                    Grams
                                  </div>
                                </div>
                              </div>
                            </div>
                          </Dropdown>
                        </td>
                        <td>
                          <input
                            className="input"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            type="text"
                            value=""
                          />
                        </td>
                        <td>
                          <a
                            className="add button"
                            onClick={[Function]}
                          >
                            common.add
                          </a>
                        </td>
                      </tr>
                    </MeasurementRow>
                  </tbody>
                </table>
              </div>
              <div
                className="column is-half supplied"
              >
                <h1
                  className="title"
                >
                  occurrenceForm.measurementOrFact.supplied.title
                </h1>
                <h2
                  className="subtitle"
                >
                   
                </h2>
                <table
                  className="supplied table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        style={
                          Object {
                            "width": "60%",
                          }
                        }
                      >
                        common.type
                      </th>
                      <th
                        style={
                          Object {
                            "width": "20%",
                          }
                        }
                      >
                        common.unit
                      </th>
                      <th
                        style={
                          Object {
                            "width": "10%",
                          }
                        }
                      >
                        common.value
                      </th>
                      <th
                        style={
                          Object {
                            "width": "5%",
                          }
                        }
                      />
                      <th
                        style={
                          Object {
                            "width": "5%",
                          }
                        }
                      />
                    </tr>
                  </thead>
                  <tbody />
                </table>
              </div>
            </div>
          </div>
        </MeasurementOrFact>
      </StepHeader>
      <StepFooter
        activeStepIndex={4}
        nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
          <ContinueButton
            name="locationContinue"
            onClick={[Function]}
            value="occurrenceForm.darwinCoreFields.step.stepTitle"
          >
            <button
              className="continue-button button is-info"
              name="locationContinue"
              onClick={[Function]}
            >
              common.continueTo occurrenceform.darwincorefields.step.steptitle
            </button>
          </ContinueButton>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={4}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 4`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.dataset.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Caprellids polulation structure in Usujiri, Hokkaido, Japan
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifeStage="larva"
            occurrenceStatus="present"
            scientificName=""
            sex="male"
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.occurrenceData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifeStage="larva"
              occurrenceStatus="present"
              scientificName=""
              sex="male"
            >
              <span>
                 29 April 2019 
              </span>
            </OccurrenceDataSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.locationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <span>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </span>
              <span>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </span>
            </SelectedLocation>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.observationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Institution: institution code; Identified by: Indiana Jones
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <MeasurementOrFactSummary
            data={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
              ]
            }
          />
        }
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.measurementOrFact.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <MeasurementOrFactSummary
              data={
                Array [
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "10",
                  },
                ]
              }
            >
              <span>
                occurrenceForm.measurementOrFact.step.title {"number":1}
              </span>
            </MeasurementOrFactSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      activeStepIndex={5}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
        <DarwinCoreFields
          fields={Array []}
          onChange={[Function]}
        >
          <div
            className="darwin-core-fields section is-fluid"
          >
            <h1
              className="title"
            >
              occurrenceForm.darwinCoreFields.title
            </h1>
            <h2
              className="subtitle"
            >
              occurrenceForm.darwinCoreFields.subtitle
               
              occurrenceForm.darwinCoreFields.tip
            </h2>
            <div
              className="columns is-grouped"
            >
              <InputText
                className="is-3 field-name"
                name="occurrenceForm.darwinCoreFields.fieldName"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 field-name"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.darwincorefields.fieldname.label"
                  >
                    occurrenceForm.darwinCoreFields.fieldName.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.darwincorefields.fieldname.label"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <InputText
                className="is-3 value"
                name="occurrenceForm.darwinCoreFields.value"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 value"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.darwincorefields.value.label"
                  >
                    occurrenceForm.darwinCoreFields.value.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.darwincorefields.value.label"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <div
                className="column add"
              >
                <span
                  className="label"
                >
                   
                </span>
                <button
                  className="button"
                  onClick={[Function]}
                >
                  common.add
                </button>
              </div>
            </div>
            <table
              className="table is-fullwidth"
            >
              <thead>
                <tr>
                  <th>
                    common.name
                  </th>
                  <th>
                    common.value
                  </th>
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </DarwinCoreFields>
      </StepHeader>
      <StepFooter
        activeStepIndex={5}
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 5`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.dataset.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Caprellids polulation structure in Usujiri, Hokkaido, Japan
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifeStage="larva"
            occurrenceStatus="present"
            scientificName=""
            sex="male"
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.occurrenceData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifeStage="larva"
              occurrenceStatus="present"
              scientificName=""
              sex="male"
            >
              <span>
                 29 April 2019 
              </span>
            </OccurrenceDataSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.locationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <span>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </span>
              <span>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </span>
            </SelectedLocation>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.observationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Institution: institution code; Identified by: Indiana Jones
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <MeasurementOrFactSummary
            data={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
              ]
            }
          />
        }
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.measurementOrFact.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <MeasurementOrFactSummary
              data={
                Array [
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "10",
                  },
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "20",
                  },
                ]
              }
            >
              <span>
                occurrenceForm.measurementOrFact.step.title {"number":2}
              </span>
            </MeasurementOrFactSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      activeStepIndex={5}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
        <DarwinCoreFields
          fields={Array []}
          onChange={[Function]}
        >
          <div
            className="darwin-core-fields section is-fluid"
          >
            <h1
              className="title"
            >
              occurrenceForm.darwinCoreFields.title
            </h1>
            <h2
              className="subtitle"
            >
              occurrenceForm.darwinCoreFields.subtitle
               
              occurrenceForm.darwinCoreFields.tip
            </h2>
            <div
              className="columns is-grouped"
            >
              <InputText
                className="is-3 field-name"
                name="occurrenceForm.darwinCoreFields.fieldName"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 field-name"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.darwincorefields.fieldname.label"
                  >
                    occurrenceForm.darwinCoreFields.fieldName.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.darwincorefields.fieldname.label"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <InputText
                className="is-3 value"
                name="occurrenceForm.darwinCoreFields.value"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 value"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.darwincorefields.value.label"
                  >
                    occurrenceForm.darwinCoreFields.value.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.darwincorefields.value.label"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <div
                className="column add"
              >
                <span
                  className="label"
                >
                   
                </span>
                <button
                  className="button"
                  onClick={[Function]}
                >
                  common.add
                </button>
              </div>
            </div>
            <table
              className="table is-fullwidth"
            >
              <thead>
                <tr>
                  <th>
                    common.name
                  </th>
                  <th>
                    common.value
                  </th>
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </DarwinCoreFields>
      </StepHeader>
      <StepFooter
        activeStepIndex={5}
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 6`] = `
<OccurrenceForm>
  <section
    className="section"
  >
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.dataset.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.dataset.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Caprellids polulation structure in Usujiri, Hokkaido, Japan
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="humanObservation"
          beginDate={1556496000000}
          endDate={null}
          lifeStage="larva"
          occurrenceStatus="present"
          scientificName=""
          sex="male"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <OccurrenceDataSummary
            basisOfRecord="humanObservation"
            beginDate={1556496000000}
            endDate={null}
            lifeStage="larva"
            occurrenceStatus="present"
            scientificName=""
            sex="male"
          />
        }
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.occurrenceData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <OccurrenceDataSummary
              basisOfRecord="humanObservation"
              beginDate={1556496000000}
              endDate={null}
              lifeStage="larva"
              occurrenceStatus="present"
              scientificName=""
              sex="male"
            >
              <span>
                 29 April 2019 
              </span>
            </OccurrenceDataSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={null}
          decimalLatitude={0.12345}
          decimalLongitude={-0.54321}
          maximumDepth={null}
          minimumDepth={null}
          verbatimCoordinates=""
          verbatimDepth=""
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.locationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <SelectedLocation
            coordinateUncertainty={null}
            decimalLatitude={0.12345}
            decimalLongitude={-0.54321}
            maximumDepth={null}
            minimumDepth={null}
            verbatimCoordinates=""
            verbatimDepth=""
          />
        }
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.locationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <SelectedLocation
              coordinateUncertainty={null}
              decimalLatitude={0.12345}
              decimalLongitude={-0.54321}
              maximumDepth={null}
              minimumDepth={null}
              verbatimCoordinates=""
              verbatimDepth=""
            >
              <span>
                occurrenceForm.locationData.step.selectedData.latitude
                : 
                0.12345
              </span>
              <span>
                occurrenceForm.locationData.step.selectedData.longitude
                : 
                -0.54321
              </span>
            </SelectedLocation>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: institution code; Identified by: Indiana Jones"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.observationData.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData="Institution: institution code; Identified by: Indiana Jones"
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.observationData.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            Institution: institution code; Identified by: Indiana Jones
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ConfirmedStepHeader
      activeStepIndex={5}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "10",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "20",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="confirmed has-background-white has-text-black"
        dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
        iconVisible={true}
        onStepTitleClick={[Function]}
        selectedData={
          <MeasurementOrFactSummary
            data={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
              ]
            }
          />
        }
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered confirmed has-background-white has-text-black"
          onClick={[Function]}
        >
          <div
            className="column is-1"
          >
            <p
              className="datadescription"
            >
              occurrenceForm.measurementOrFact.step.dataDescription
            </p>
          </div>
          <p
            className="selected-data column"
          >
            <MeasurementOrFactSummary
              data={
                Array [
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "10",
                  },
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "20",
                  },
                  Object {
                    "type": "Pressure",
                    "unit": "Decibars",
                    "units": Array [
                      Object {
                        "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                        "name": "Decibars",
                      },
                    ],
                    "value": "20",
                  },
                ]
              }
            >
              <span>
                occurrenceForm.measurementOrFact.step.title {"number":3}
              </span>
            </MeasurementOrFactSummary>
          </p>
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              <FontAwesomeIcon
                className="check-circle"
                icon="check-circle"
              >
                <i
                  className="check-circle"
                  icon="check-circle"
                />
              </FontAwesomeIcon>
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </ConfirmedStepHeader>
    <ActiveStepHeader
      activeStepIndex={5}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
        <DarwinCoreFields
          fields={Array []}
          onChange={[Function]}
        >
          <div
            className="darwin-core-fields section is-fluid"
          >
            <h1
              className="title"
            >
              occurrenceForm.darwinCoreFields.title
            </h1>
            <h2
              className="subtitle"
            >
              occurrenceForm.darwinCoreFields.subtitle
               
              occurrenceForm.darwinCoreFields.tip
            </h2>
            <div
              className="columns is-grouped"
            >
              <InputText
                className="is-3 field-name"
                name="occurrenceForm.darwinCoreFields.fieldName"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 field-name"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.darwincorefields.fieldname.label"
                  >
                    occurrenceForm.darwinCoreFields.fieldName.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.darwincorefields.fieldname.label"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <InputText
                className="is-3 value"
                name="occurrenceForm.darwinCoreFields.value"
                onChange={[Function]}
              >
                <div
                  className="column field is-3 value"
                >
                  <label
                    className="label"
                    htmlFor="occurrenceform.darwincorefields.value.label"
                  >
                    occurrenceForm.darwinCoreFields.value.label
                  </label>
                  <input
                    className="input"
                    id="occurrenceform.darwincorefields.value.label"
                    onChange={[Function]}
                    type="text"
                  />
                </div>
              </InputText>
              <div
                className="column add"
              >
                <span
                  className="label"
                >
                   
                </span>
                <button
                  className="button"
                  onClick={[Function]}
                >
                  common.add
                </button>
              </div>
            </div>
            <table
              className="table is-fullwidth"
            >
              <thead>
                <tr>
                  <th>
                    common.name
                  </th>
                  <th>
                    common.value
                  </th>
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
          </div>
        </DarwinCoreFields>
      </StepHeader>
      <StepFooter
        activeStepIndex={5}
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when updating not supported occurrence renders correctly 1`] = `
<OccurrenceForm
  location={
    Object {
      "state": Object {
        "action": "update",
        "datasetId": "ntDOtUc7XsRrIus",
        "dwcaId": "IBSS_R/V N. Danilevskiy 1935 Azov Sea benthos data_796",
      },
    }
  }
>
  <OccurrenceNotSupported
    dwca={
      Object {
        "message": "I am not supported",
      }
    }
    exception={[TypeError: Cannot read property 'occurrence' of undefined]}
  >
    <section
      className="occurrence-not-supported section"
    >
      <div
        className="notification is-danger"
      >
        <div
          className="main-message"
        >
          <div>
            occurrenceForm.occurrenceNotSupported.message
            <Link
              to="/input-data/"
            >
              <a
                href="/input-data/"
                onClick={[Function]}
              >
                occurrenceForm.occurrenceNotSupported.linkMessage
              </a>
            </Link>
          </div>
          <div>
            <button
              className="button is-danger is-inverted"
              onClick={[Function]}
            >
              occurrenceForm.occurrenceNotSupported.showDetails
            </button>
          </div>
        </div>
      </div>
    </section>
  </OccurrenceNotSupported>
</OccurrenceForm>
`;

exports[`OccurrenceForm when updating occurrence and then clicking "Review and Submit" button renders correctly 1`] = `
<OccurrenceForm
  location={
    Object {
      "state": Object {
        "action": "update",
        "datasetId": "ntDOtUc7XsRrIus",
        "dwcaId": "IBSS_R/V N. Danilevskiy 1935 Azov Sea benthos data_796",
      },
    }
  }
>
  <section
    className="section"
  >
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\""
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-1 background-color-0"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-1 background-color-0"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="machineObservation"
          beginDate={2019-06-25T00:00:00.000Z}
          endDate={2019-06-26T00:00:00.000Z}
          lifeStage="unspecified"
          occurrenceStatus="absent"
          scientificName="Aaadonta"
          sex="female"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-2 background-color-5"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={1}
          decimalLatitude={51.518463972439385}
          decimalLongitude={-0.16771316528320315}
          maximumDepth={3}
          minimumDepth={2}
          verbatimCoordinates="17T 630000 4833400"
          verbatimDepth="100-200 m"
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-3 background-color-10"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: Institution Code; Identified by: person-1, person-2"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-4 background-color-15"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Abundance category of biological entity specified elsewhere",
                "unit": "Dimensionless",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                    "name": "Dimensionless",
                  },
                ],
                "value": "3",
              },
              Object {
                "type": "Abundance of biological entity specified elsewhere per unit area of the bed",
                "unit": "Number per square meter",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMS/",
                    "name": "Number per square meter",
                  },
                ],
                "value": "44",
              },
              Object {
                "type": "ObservedIndividualCount",
                "unit": "Dimensionless",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                    "name": "Dimensionless",
                  },
                ],
                "value": "1",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "1",
              },
              Object {
                "type": "Salinity",
                "unit": "Grams per kilogram",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGKG",
                    "name": "Grams per kilogram",
                  },
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                    "name": "PSU (dimensionless)",
                  },
                ],
                "value": "3",
              },
              Object {
                "type": "Temperature",
                "unit": "Degrees Celsius",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPAA",
                    "name": "Degrees Celsius",
                  },
                ],
                "value": "2",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={null}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <FinalSummary
      darwinCoreFields={
        Array [
          Object {
            "name": "http://rs.iobis.org/obis/terms/iobis-1",
            "value": "iobis-1-value",
          },
          Object {
            "name": "http://rs.iobis.org/obis/terms/iobis-2",
            "value": "iobis-2-value",
          },
          Object {
            "name": "http://purl.org/dc/terms/purl-field-1",
            "value": "purl-field-1-value",
          },
          Object {
            "name": "http://purl.org/dc/terms/purl-field-2",
            "value": "purl-field-2-value",
          },
          Object {
            "name": "http://rs.tdwg.org/dwc/terms/tdwg-field-1",
            "value": "tdwg-field-1-value",
          },
          Object {
            "name": "http://rs.tdwg.org/dwc/terms/tdwg-field-2",
            "value": "tdwg-field-2-value",
          },
        ]
      }
      dataset={
        Object {
          "abstract": Object {
            "paragraphs": Array [
              "The data were collected in the Azov Sea during a cruise on board of R/V N. Danilevskiy in 1935. This dataset contains abundance data (individuals per m²) and biomass data (g/m²) for benthic taxa. No additional metadata is available.",
              "This dataset was rescued through data archaeology activities in the framework of the EMODnet Biology data grants.",
            ],
          },
          "contacts": Array [
            Object {
              "electronicMailAddress": "o.sergeyeva@gsva.net",
              "individualName": Object {
                "givenName": "Oleksandra",
                "surName": "Sergeyeva",
              },
              "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
            },
          ],
          "creators": Array [
            Object {
              "electronicMailAddress": "director@ibss.iuf.net",
              "individualName": Object {
                "givenName": "Yu. B.",
                "surName": "Belogurova",
              },
              "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
            },
            Object {
              "electronicMailAddress": "o.sergeyeva@gsva.net",
              "individualName": Object {
                "givenName": "Oleksandra",
                "surName": "Sergeyeva",
              },
              "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
            },
          ],
          "id": "ntDOtUc7XsRrIus",
          "keywordSets": Array [
            Object {
              "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
              "keywords": Array [
                "Occurrence",
              ],
            },
            Object {
              "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
              "keywords": Array [
                "Observation",
              ],
            },
          ],
          "language": "en",
          "license": Object {
            "title": "Creative Commons Attribution Non Commercial (CC-BY) 4.0 License",
            "url": "http://creativecommons.org/licenses/by/4.0/legalcode",
          },
          "meta": Object {
            "dwcTables": Object {
              "core": "occurrence",
              "extensions": Array [
                "emof",
              ],
            },
            "type": "occurrence",
          },
          "metadataProviders": Array [
            Object {
              "electronicMailAddress": "info@eurobis.org",
              "individualName": Object {
                "surName": "EurOBIS Data Management Team",
              },
              "organizationName": "Flanders Marine Institute (VLIZ)",
            },
          ],
          "title": Object {
            "language": "en",
            "value": "Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\"",
          },
        }
      }
      errorMessage=""
      errorVisible={false}
      locationData={
        Object {
          "coordinateUncertainty": 1,
          "decimalLatitude": 51.518463972439385,
          "decimalLongitude": -0.16771316528320315,
          "maximumDepth": 3,
          "minimumDepth": 2,
          "verbatimCoordinates": "17T 630000 4833400",
          "verbatimDepth": "100-200 m",
        }
      }
      measurements={
        Array [
          Object {
            "type": "Abundance category of biological entity specified elsewhere",
            "unit": "Dimensionless",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                "name": "Dimensionless",
              },
            ],
            "value": "3",
          },
          Object {
            "type": "Abundance of biological entity specified elsewhere per unit area of the bed",
            "unit": "Number per square meter",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMS/",
                "name": "Number per square meter",
              },
            ],
            "value": "44",
          },
          Object {
            "type": "ObservedIndividualCount",
            "unit": "Dimensionless",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                "name": "Dimensionless",
              },
            ],
            "value": "1",
          },
          Object {
            "type": "Pressure",
            "unit": "Decibars",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                "name": "Decibars",
              },
            ],
            "value": "1",
          },
          Object {
            "type": "Salinity",
            "unit": "Grams per kilogram",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGKG",
                "name": "Grams per kilogram",
              },
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                "name": "PSU (dimensionless)",
              },
            ],
            "value": "3",
          },
          Object {
            "type": "Temperature",
            "unit": "Degrees Celsius",
            "units": Array [
              Object {
                "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPAA",
                "name": "Degrees Celsius",
              },
            ],
            "value": "2",
          },
        ]
      }
      observationData={
        Object {
          "catalogNumber": "Catalog Number",
          "collectionCode": "Collection Code",
          "fieldNumber": "Field Number",
          "identificationQualifier": "Identification Qualifier",
          "identificationRemarks": "Identification Remarks",
          "identifiedBy": Array [
            "person-1",
            "person-2",
          ],
          "institutionCode": "Institution Code",
          "recordNumber": "Record Number",
          "recordedBy": Array [
            "recorded-by-1",
            "recorded-by-2",
          ],
          "references": Array [
            "www.google.com",
            "https://clojure.org/",
          ],
        }
      }
      occurrenceData={
        Object {
          "basisOfRecord": "machineObservation",
          "beginDate": 2019-06-25T00:00:00.000Z,
          "endDate": 2019-06-26T00:00:00.000Z,
          "lifeStage": "unspecified",
          "occurrenceStatus": "absent",
          "scientificName": "Aaadonta",
          "sex": "female",
        }
      }
      onChangeClick={[Function]}
      onCreateFreshClick={[Function]}
      onCreateFromThisClick={[Function]}
      onErrorClose={[Function]}
      onSubmitClick={[Function]}
      successMessageType="update"
      successVisible={false}
    >
      <div
        className="final-summary section is-fluid"
      >
        <div
          className="columns is-centered"
        >
          <h1
            className="final-summary-title title is-3"
          >
            occurrenceForm.finalSummary.title
          </h1>
        </div>
        <SubmitEntryButton
          onClick={[Function]}
        >
          <div
            className="submit-entry-button columns is-mobile is-centered"
          >
            <button
              className="button is-info is-medium"
              onClick={[Function]}
            >
              common.submit
            </button>
          </div>
        </SubmitEntryButton>
        <section
          className="dataset-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              1 - 
              occurrenceForm.dataset.step.stepTitle
            </h2>
          </SectionTitle>
          <p>
            Benthos collected in the Azov Sea in 1935 on board the R/V "N. Danilevskiy"
          </p>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="occurrence-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              2 - 
              occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.occurrenceData.scientificName"
                value="Aaadonta"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.scientificName
                  </td>
                  <td
                    className="value"
                  >
                    Aaadonta
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.eventBeginDate"
                value="25 June 2019"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.eventBeginDate
                  </td>
                  <td
                    className="value"
                  >
                    25 June 2019
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.eventEndDate"
                value="26 June 2019"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.eventEndDate
                  </td>
                  <td
                    className="value"
                  >
                    26 June 2019
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.occurrenceStatus.title"
                value="occurrenceForm.occurrenceData.occurrenceStatus.absent"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.occurrenceStatus.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.occurrenceStatus.absent
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.basisOfRecord.title"
                value="occurrenceForm.occurrenceData.basisOfRecord.machineObservation"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.basisOfRecord.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.basisOfRecord.machineObservation
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.sex.title"
                value="occurrenceForm.occurrenceData.sex.female"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.sex.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.sex.female
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.occurrenceData.lifeStage.title"
                value="occurrenceForm.occurrenceData.lifeStage.unspecified"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.occurrenceData.lifeStage.title
                  </td>
                  <td
                    className="value"
                  >
                    occurrenceForm.occurrenceData.lifeStage.unspecified
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="location-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              3 - 
              occurrenceForm.locationData.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.locationData.decimalLatitude.label"
                value={51.518463972439385}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.decimalLatitude.label
                  </td>
                  <td
                    className="value"
                  >
                    51.518463972439385
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.decimalLongitude.label"
                value={-0.16771316528320315}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.decimalLongitude.label
                  </td>
                  <td
                    className="value"
                  >
                    -0.16771316528320315
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.coordinateUncertainty.label"
                value={1}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.coordinateUncertainty.label
                  </td>
                  <td
                    className="value"
                  >
                    1
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.minimumDepth.label"
                value={2}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.minimumDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    2
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.maximumDepth.label"
                value={3}
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.maximumDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    3
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.locationData.verbatimDataSubtitle
            </h2>
          </SectionSubtitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <tbody>
              <NameValueRow
                name="occurrenceForm.locationData.verbatimCoordinates.label"
                value="17T 630000 4833400"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.verbatimCoordinates.label
                  </td>
                  <td
                    className="value"
                  >
                    17T 630000 4833400
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.locationData.verbatimDepth.label"
                value="100-200 m"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.locationData.verbatimDepth.label
                  </td>
                  <td
                    className="value"
                  >
                    100-200 m
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="observation-data-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              4 - 
              occurrenceForm.observationData.step.stepTitle
            </h2>
          </SectionTitle>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.observationData.catalogDataSubtitle
            </h2>
          </SectionSubtitle>
          <div
            className="content"
          >
            <table
              className="table is-striped is-fullwidth is-hoverable"
            >
              <NameValueHeader>
                <thead>
                  <tr>
                    <th
                      className="type"
                    >
                      common.name
                    </th>
                    <th
                      className="value"
                    >
                      common.value
                    </th>
                  </tr>
                </thead>
              </NameValueHeader>
              <tbody>
                <NameValueRow
                  name="occurrenceForm.observationData.institutionCode.label"
                  value="Institution Code"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.institutionCode.label
                    </td>
                    <td
                      className="value"
                    >
                      Institution Code
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.collectionCode.label"
                  value="Collection Code"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.collectionCode.label
                    </td>
                    <td
                      className="value"
                    >
                      Collection Code
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.fieldNumber.label"
                  value="Field Number"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.fieldNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      Field Number
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.catalogNumber.label"
                  value="Catalog Number"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.catalogNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      Catalog Number
                    </td>
                  </tr>
                </NameValueRow>
                <NameValueRow
                  name="occurrenceForm.observationData.recordNumber.label"
                  value="Record Number"
                >
                  <tr
                    className="name-value-row fieldrow"
                  >
                    <td
                      className="name"
                    >
                      occurrenceForm.observationData.recordNumber.label
                    </td>
                    <td
                      className="value"
                    >
                      Record Number
                    </td>
                  </tr>
                </NameValueRow>
              </tbody>
            </table>
            <div
              className="columns"
            >
              <div
                className="column is-3"
              >
                <p
                  className="title is-5"
                >
                  occurrenceForm.observationData.identifiedBy.label
                </p>
                <ul>
                  <li
                    key="person-1"
                  >
                    person-1
                  </li>
                  <li
                    key="person-2"
                  >
                    person-2
                  </li>
                </ul>
              </div>
              <div
                className="column is-3"
              >
                <p
                  className="title is-5"
                >
                  occurrenceForm.observationData.recordedBy.label
                </p>
                <ul>
                  <li
                    key="recorded-by-1"
                  >
                    recorded-by-1
                  </li>
                  <li
                    key="recorded-by-2"
                  >
                    recorded-by-2
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <SectionSubtitle>
            <h2
              className="title is-5"
            >
              occurrenceForm.finalSummary.observationData.speciesDataSubtitle
            </h2>
          </SectionSubtitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                name="occurrenceForm.observationData.references.label"
                value="www.google.com, https://clojure.org/"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.references.label
                  </td>
                  <td
                    className="value"
                  >
                    www.google.com, https://clojure.org/
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.observationData.identificationQualifier.label"
                value="Identification Qualifier"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.identificationQualifier.label
                  </td>
                  <td
                    className="value"
                  >
                    Identification Qualifier
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                name="occurrenceForm.observationData.identificationRemarks.label"
                value="Identification Remarks"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    occurrenceForm.observationData.identificationRemarks.label
                  </td>
                  <td
                    className="value"
                  >
                    Identification Remarks
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="measurement-or-fact-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              5 - 
              occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="measurements table is-fullwidth is-striped is-hoverable"
          >
            <thead>
              <tr>
                <th
                  className="type"
                >
                  common.type
                </th>
                <th
                  className="name"
                >
                  common.name
                </th>
                <th
                  className="value"
                >
                  common.value
                </th>
              </tr>
            </thead>
            <tbody>
              <tr
                className="fieldrow"
                key="0"
              >
                <td>
                  Abundance category of biological entity specified elsewhere
                </td>
                <td>
                  Dimensionless
                </td>
                <td>
                  3
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="1"
              >
                <td>
                  Abundance of biological entity specified elsewhere per unit area of the bed
                </td>
                <td>
                  Number per square meter
                </td>
                <td>
                  44
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="2"
              >
                <td>
                  ObservedIndividualCount
                </td>
                <td>
                  Dimensionless
                </td>
                <td>
                  1
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="3"
              >
                <td>
                  Pressure
                </td>
                <td>
                  Decibars
                </td>
                <td>
                  1
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="4"
              >
                <td>
                  Salinity
                </td>
                <td>
                  Grams per kilogram
                </td>
                <td>
                  3
                </td>
              </tr>
              <tr
                className="fieldrow"
                key="5"
              >
                <td>
                  Temperature
                </td>
                <td>
                  Degrees Celsius
                </td>
                <td>
                  2
                </td>
              </tr>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <section
          className="darwin-core-fields-summary"
        >
          <SectionTitle>
            <h2
              className="title is-4"
            >
              6 - 
              occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </SectionTitle>
          <table
            className="table is-striped is-fullwidth is-hoverable"
          >
            <NameValueHeader>
              <thead>
                <tr>
                  <th
                    className="type"
                  >
                    common.name
                  </th>
                  <th
                    className="value"
                  >
                    common.value
                  </th>
                </tr>
              </thead>
            </NameValueHeader>
            <tbody>
              <NameValueRow
                key="0"
                name="http://rs.iobis.org/obis/terms/iobis-1"
                value="iobis-1-value"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    http://rs.iobis.org/obis/terms/iobis-1
                  </td>
                  <td
                    className="value"
                  >
                    iobis-1-value
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="1"
                name="http://rs.iobis.org/obis/terms/iobis-2"
                value="iobis-2-value"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    http://rs.iobis.org/obis/terms/iobis-2
                  </td>
                  <td
                    className="value"
                  >
                    iobis-2-value
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="2"
                name="http://purl.org/dc/terms/purl-field-1"
                value="purl-field-1-value"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    http://purl.org/dc/terms/purl-field-1
                  </td>
                  <td
                    className="value"
                  >
                    purl-field-1-value
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="3"
                name="http://purl.org/dc/terms/purl-field-2"
                value="purl-field-2-value"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    http://purl.org/dc/terms/purl-field-2
                  </td>
                  <td
                    className="value"
                  >
                    purl-field-2-value
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="4"
                name="http://rs.tdwg.org/dwc/terms/tdwg-field-1"
                value="tdwg-field-1-value"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    http://rs.tdwg.org/dwc/terms/tdwg-field-1
                  </td>
                  <td
                    className="value"
                  >
                    tdwg-field-1-value
                  </td>
                </tr>
              </NameValueRow>
              <NameValueRow
                key="5"
                name="http://rs.tdwg.org/dwc/terms/tdwg-field-2"
                value="tdwg-field-2-value"
              >
                <tr
                  className="name-value-row fieldrow"
                >
                  <td
                    className="name"
                  >
                    http://rs.tdwg.org/dwc/terms/tdwg-field-2
                  </td>
                  <td
                    className="value"
                  >
                    tdwg-field-2-value
                  </td>
                </tr>
              </NameValueRow>
            </tbody>
          </table>
          <ChangeButton
            onClick={[Function]}
          >
            <button
              className="change-button button"
              onClick={[Function]}
            >
              common.change
            </button>
          </ChangeButton>
        </section>
        <SubmitEntryButton
          onClick={[Function]}
        >
          <div
            className="submit-entry-button columns is-mobile is-centered"
          >
            <button
              className="button is-info is-medium"
              onClick={[Function]}
            >
              common.submit
            </button>
          </div>
        </SubmitEntryButton>
      </div>
    </FinalSummary>
  </section>
</OccurrenceForm>
`;

exports[`OccurrenceForm when updating occurrence renders correctly 1`] = `
<OccurrenceForm
  location={
    Object {
      "state": Object {
        "action": "update",
        "datasetId": "ntDOtUc7XsRrIus",
        "dwcaId": "IBSS_R/V N. Danilevskiy 1935 Azov Sea benthos data_796",
      },
    }
  }
>
  <section
    className="section"
  >
    <ActiveStepHeader
      activeStepIndex={0}
      className="step-1 background-color-0"
      dataDescription="occurrenceForm.dataset.step.dataDescription"
      key="occurrenceForm.dataset.step.stepTitle"
      nextStep="occurrenceForm.occurrenceData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\""
      stepDescription="occurrenceForm.dataset.step.stepDescription"
      stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="active has-background-grey has-text-white"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        scrollOnRender={true}
        selectedData=""
        stepDescription="occurrenceForm.dataset.step.stepDescription"
        stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered active has-background-grey has-text-white"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.dataset.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              1 - occurrenceForm.dataset.step.stepTitle
            </h2>
          </div>
        </header>
        <Dataset
          datasets={
            Array [
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "Population structure data of Caprella species used in the article \\"Hosono T (2014) Temperature explains reproductive dynamics in caprellids at different latitudes. Marine Ecology Progress Series 511:129-141\\"",
                  ],
                },
                "contacts": Array [
                  Object {
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "creators": Array [
                  Object {
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "id": "wEaBfmFyQhYCdsk",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Samplingevent",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "event",
                    "extensions": Array [
                      "emof",
                      "occurrence",
                    ],
                  },
                  "type": "event",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "hosonot@jamstec.go.jp",
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Caprellids polulation structure in Usujiri, Hokkaido, Japan",
                },
              },
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "The data were collected in the Azov Sea during a cruise on board of R/V N. Danilevskiy in 1935. This dataset contains abundance data (individuals per m²) and biomass data (g/m²) for benthic taxa. No additional metadata is available.",
                    "This dataset was rescued through data archaeology activities in the framework of the EMODnet Biology data grants.",
                  ],
                },
                "contacts": Array [
                  Object {
                    "electronicMailAddress": "o.sergeyeva@gsva.net",
                    "individualName": Object {
                      "givenName": "Oleksandra",
                      "surName": "Sergeyeva",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                  },
                ],
                "creators": Array [
                  Object {
                    "electronicMailAddress": "director@ibss.iuf.net",
                    "individualName": Object {
                      "givenName": "Yu. B.",
                      "surName": "Belogurova",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                  },
                  Object {
                    "electronicMailAddress": "o.sergeyeva@gsva.net",
                    "individualName": Object {
                      "givenName": "Oleksandra",
                      "surName": "Sergeyeva",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                  },
                ],
                "id": "ntDOtUc7XsRrIus",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Occurrence",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                    "keywords": Array [
                      "Observation",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "occurrence",
                    "extensions": Array [
                      "emof",
                    ],
                  },
                  "type": "occurrence",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "info@eurobis.org",
                    "individualName": Object {
                      "surName": "EurOBIS Data Management Team",
                    },
                    "organizationName": "Flanders Marine Institute (VLIZ)",
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\"",
                },
              },
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "An annotated check-list is given of Antipatharia species occurring deeper than 2000 m in the seas bordering Europe.",
                    "The check-list is based on published data. It includes 12 species. For each species synonymy, data on localities in European seas and general species distribution are provided. Only distributions for which geographic coordinates are availlable were retained, as these are made available through EurOBIS.",
                  ],
                },
                "contacts": Array [
                  Object {
                    "electronicMailAddress": "tina@ocean.ru",
                    "individualName": Object {
                      "givenName": "Tina",
                      "surName": "Molodtsova",
                    },
                    "organizationName": "Russian Academy of Sciences P. P. Shirshov Institute of Oceanology (RAS-SIO RAS)",
                  },
                ],
                "creators": Array [
                  Object {
                    "electronicMailAddress": "tina@ocean.ru",
                    "individualName": Object {
                      "givenName": "Tina",
                      "surName": "Molodtsova",
                    },
                    "organizationName": "Russian Academy of Sciences P. P. Shirshov Institute of Oceanology (RAS-SIO RAS)",
                  },
                ],
                "id": "PoJnGNMaxsupE4w",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Occurrence",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                    "keywords": Array [
                      "Observation",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "occurrence",
                    "extensions": Array [
                      "emof",
                    ],
                  },
                  "type": "occurrence",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "info@eurobis.org",
                    "individualName": Object {
                      "surName": "EurOBIS Data Management Team",
                    },
                    "organizationName": "Flanders Marine Institute (VLIZ)",
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Antipatharia distribution data from: Deep-sea fauna of European seas - an annotated species check-list of benthic invertebrates living deeper than 2000 m in the seas bordering Europe",
                },
              },
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "paragraph-1",
                    "paragraph-2",
                  ],
                },
                "contacts": Array [
                  Object {
                    "electronicMailAddress": "arvanitidis@her.hcmr.gr",
                    "individualName": Object {
                      "givenName": "Christos",
                      "surName": "Arvanitidis",
                    },
                    "organizationName": "Hellenic Centre for Marine Research (HCMR)",
                  },
                ],
                "creators": Array [
                  Object {
                    "electronicMailAddress": "arvanitidis@her.hcmr.gr",
                    "individualName": Object {
                      "givenName": "Christos",
                      "surName": "Arvanitidis",
                    },
                    "organizationName": "Hellenic Centre for Marine Research (HCMR)",
                  },
                  Object {
                    "organizationName": "Hellenic Centre for Marine Research (HCMR)",
                  },
                  Object {
                    "electronicMailAddress": "alexpet@ibss.iuf.net",
                    "individualName": Object {
                      "givenName": "Alexei",
                      "surName": "Petrov",
                    },
                    "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS",
                  },
                ],
                "id": "NnqVLwIyPn-nRkc",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Occurrence",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                    "keywords": Array [
                      "Observation",
                    ],
                  },
                  Object {
                    "keywordThesaurus": "ASFA",
                    "keywords": Array [
                      "Benthic biomass",
                      "Benthos",
                      "Data",
                      "Marine Genomics",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "occurrence",
                    "extensions": Array [
                      "emof",
                    ],
                  },
                  "type": "occurrence",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "info@eurobis.org",
                    "individualName": Object {
                      "surName": "EurOBIS Data Management Team",
                    },
                    "organizationName": "Flanders Marine Institute (VLIZ)",
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Benthic data from Sevastopol (Black Sea)",
                },
              },
            ]
          }
          onChange={[Function]}
          selectedDataset={
            Object {
              "abstract": Object {
                "paragraphs": Array [
                  "The data were collected in the Azov Sea during a cruise on board of R/V N. Danilevskiy in 1935. This dataset contains abundance data (individuals per m²) and biomass data (g/m²) for benthic taxa. No additional metadata is available.",
                  "This dataset was rescued through data archaeology activities in the framework of the EMODnet Biology data grants.",
                ],
              },
              "contacts": Array [
                Object {
                  "electronicMailAddress": "o.sergeyeva@gsva.net",
                  "individualName": Object {
                    "givenName": "Oleksandra",
                    "surName": "Sergeyeva",
                  },
                  "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                },
              ],
              "creators": Array [
                Object {
                  "electronicMailAddress": "director@ibss.iuf.net",
                  "individualName": Object {
                    "givenName": "Yu. B.",
                    "surName": "Belogurova",
                  },
                  "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                },
                Object {
                  "electronicMailAddress": "o.sergeyeva@gsva.net",
                  "individualName": Object {
                    "givenName": "Oleksandra",
                    "surName": "Sergeyeva",
                  },
                  "organizationName": "National Academy of Sciences of Ukraine Institute of Biology of the Southern Seas (NASU-IBSS)",
                },
              ],
              "id": "ntDOtUc7XsRrIus",
              "keywordSets": Array [
                Object {
                  "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                  "keywords": Array [
                    "Occurrence",
                  ],
                },
                Object {
                  "keywordThesaurus": "GBIF Dataset Subtype Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_subtype.xml",
                  "keywords": Array [
                    "Observation",
                  ],
                },
              ],
              "language": "en",
              "license": Object {
                "title": "Creative Commons Attribution Non Commercial (CC-BY) 4.0 License",
                "url": "http://creativecommons.org/licenses/by/4.0/legalcode",
              },
              "meta": Object {
                "dwcTables": Object {
                  "core": "occurrence",
                  "extensions": Array [
                    "emof",
                  ],
                },
                "type": "occurrence",
              },
              "metadataProviders": Array [
                Object {
                  "electronicMailAddress": "info@eurobis.org",
                  "individualName": Object {
                    "surName": "EurOBIS Data Management Team",
                  },
                  "organizationName": "Flanders Marine Institute (VLIZ)",
                },
              ],
              "title": Object {
                "language": "en",
                "value": "Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\"",
              },
            }
          }
        >
          <div
            className="dataset is-fluid"
          >
            <table
              className="table is-striped is-fullwidth"
            >
              <tbody>
                <DatasetOption
                  checked={false}
                  id="wEaBfmFyQhYCdsk"
                  key="wEaBfmFyQhYCdsk"
                  onClick={[Function]}
                  title="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value="wEaBfmFyQhYCdsk"
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-wEaBfmFyQhYCdsk"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="wEaBfmFyQhYCdsk"
                        />
                        <label
                          htmlFor="dataset-wEaBfmFyQhYCdsk"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Caprellids polulation structure in Usujiri, Hokkaido, Japan
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={true}
                  id="ntDOtUc7XsRrIus"
                  key="ntDOtUc7XsRrIus"
                  onClick={[Function]}
                  title="Benthos collected in the Azov Sea in 1935 on board the R/V \\"N. Danilevskiy\\""
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={true}
                        name="dataset"
                        onChange={[Function]}
                        value="ntDOtUc7XsRrIus"
                      >
                        <input
                          checked={true}
                          className="input-radio is-checkradio"
                          id="dataset-ntDOtUc7XsRrIus"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="ntDOtUc7XsRrIus"
                        />
                        <label
                          htmlFor="dataset-ntDOtUc7XsRrIus"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Benthos collected in the Azov Sea in 1935 on board the R/V "N. Danilevskiy"
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  id="PoJnGNMaxsupE4w"
                  key="PoJnGNMaxsupE4w"
                  onClick={[Function]}
                  title="Antipatharia distribution data from: Deep-sea fauna of European seas - an annotated species check-list of benthic invertebrates living deeper than 2000 m in the seas bordering Europe"
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value="PoJnGNMaxsupE4w"
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-PoJnGNMaxsupE4w"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="PoJnGNMaxsupE4w"
                        />
                        <label
                          htmlFor="dataset-PoJnGNMaxsupE4w"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Antipatharia distribution data from: Deep-sea fauna of European seas - an annotated species check-list of benthic invertebrates living deeper than 2000 m in the seas bordering Europe
                    </td>
                  </tr>
                </DatasetOption>
                <DatasetOption
                  checked={false}
                  id="NnqVLwIyPn-nRkc"
                  key="NnqVLwIyPn-nRkc"
                  onClick={[Function]}
                  title="Benthic data from Sevastopol (Black Sea)"
                >
                  <tr
                    className="dataset-option"
                    onClick={[Function]}
                  >
                    <td>
                      <InputRadio
                        checked={false}
                        name="dataset"
                        onChange={[Function]}
                        value="NnqVLwIyPn-nRkc"
                      >
                        <input
                          checked={false}
                          className="input-radio is-checkradio"
                          id="dataset-NnqVLwIyPn-nRkc"
                          name="dataset"
                          onChange={[Function]}
                          type="radio"
                          value="NnqVLwIyPn-nRkc"
                        />
                        <label
                          htmlFor="dataset-NnqVLwIyPn-nRkc"
                        />
                      </InputRadio>
                    </td>
                    <td>
                      Benthic data from Sevastopol (Black Sea)
                    </td>
                  </tr>
                </DatasetOption>
              </tbody>
            </table>
          </div>
        </Dataset>
      </StepHeader>
      <StepFooter
        activeStepIndex={0}
        nextStep="occurrenceForm.occurrenceData.step.stepTitle"
        onContinueButtonClick={[Function]}
        onCopyPreviousDataClick={[Function]}
      >
        <div
          className="step-footer columns section"
        >
          <CopyPreviousData
            onClick={[Function]}
            visible={true}
          >
            <div
              className="columns"
            >
              <div
                className="copy-previous-data column is-narrow"
                onClick={[Function]}
              >
                occurrenceForm.copyPreviousStep
              </div>
            </div>
          </CopyPreviousData>
          <ContinueButton
            name="locationContinue"
            onClick={[Function]}
            value="occurrenceForm.occurrenceData.step.stepTitle"
          >
            <button
              className="continue-button button is-info"
              name="locationContinue"
              onClick={[Function]}
            >
              common.continueTo occurrenceform.occurrencedata.step.steptitle
            </button>
          </ContinueButton>
        </div>
      </StepFooter>
    </ActiveStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-2 background-color-5"
      dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
      key="occurrenceForm.occurrenceData.step.stepTitle"
      nextStep="occurrenceForm.locationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <OccurrenceDataSummary
          basisOfRecord="machineObservation"
          beginDate={2019-06-25T00:00:00.000Z}
          endDate={2019-06-26T00:00:00.000Z}
          lifeStage="unspecified"
          occurrenceStatus="absent"
          scientificName="Aaadonta"
          sex="female"
        />
      }
      stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
      stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-2 background-color-5"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
        stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.occurrenceData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              2 - occurrenceForm.occurrenceData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-3 background-color-10"
      dataDescription="occurrenceForm.locationData.step.dataDescription"
      key="occurrenceForm.locationData.step.stepTitle"
      nextStep="occurrenceForm.observationData.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <SelectedLocation
          coordinateUncertainty={1}
          decimalLatitude={51.518463972439385}
          decimalLongitude={-0.16771316528320315}
          maximumDepth={3}
          minimumDepth={2}
          verbatimCoordinates="17T 630000 4833400"
          verbatimDepth="100-200 m"
        />
      }
      stepDescription="occurrenceForm.locationData.step.stepDescription"
      stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-3 background-color-10"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.locationData.step.stepDescription"
        stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.locationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              3 - occurrenceForm.locationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-4 background-color-15"
      dataDescription="occurrenceForm.observationData.step.dataDescription"
      key="occurrenceForm.observationData.step.stepTitle"
      nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData="Institution: Institution Code; Identified by: person-1, person-2"
      stepDescription="occurrenceForm.observationData.step.stepDescription"
      stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-4 background-color-15"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.observationData.step.stepDescription"
        stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.observationData.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              4 - occurrenceForm.observationData.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-5 background-color-20"
      dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
      key="occurrenceForm.measurementOrFact.step.stepTitle"
      nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData={
        <MeasurementOrFactSummary
          data={
            Array [
              Object {
                "type": "Abundance category of biological entity specified elsewhere",
                "unit": "Dimensionless",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                    "name": "Dimensionless",
                  },
                ],
                "value": "3",
              },
              Object {
                "type": "Abundance of biological entity specified elsewhere per unit area of the bed",
                "unit": "Number per square meter",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMS/",
                    "name": "Number per square meter",
                  },
                ],
                "value": "44",
              },
              Object {
                "type": "ObservedIndividualCount",
                "unit": "Dimensionless",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                    "name": "Dimensionless",
                  },
                ],
                "value": "1",
              },
              Object {
                "type": "Pressure",
                "unit": "Decibars",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                    "name": "Decibars",
                  },
                ],
                "value": "1",
              },
              Object {
                "type": "Salinity",
                "unit": "Grams per kilogram",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGKG",
                    "name": "Grams per kilogram",
                  },
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                    "name": "PSU (dimensionless)",
                  },
                ],
                "value": "3",
              },
              Object {
                "type": "Temperature",
                "unit": "Degrees Celsius",
                "units": Array [
                  Object {
                    "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPAA",
                    "name": "Degrees Celsius",
                  },
                ],
                "value": "2",
              },
            ]
          }
        />
      }
      stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
      stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-5 background-color-20"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
        stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.measurementOrFact.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              5 - occurrenceForm.measurementOrFact.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <NotConfirmedStepHeader
      activeStepIndex={0}
      className="step-6 background-color-25"
      dataDescription=""
      key="occurrenceForm.darwinCoreFields.step.stepTitle"
      onContinueButtonClick={[Function]}
      onCopyPreviousDataClick={[Function]}
      onStepTitleClick={[Function]}
      selectedData=""
      stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
      stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      totalSteps={5}
    >
      <StepHeader
        className="not-confirmed has-text-white step-6 background-color-25"
        dataDescription=""
        iconVisible={false}
        onStepTitleClick={[Function]}
        selectedData=""
        stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
        stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
      >
        <header
          className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
          onClick={[Function]}
        >
          <div
            className="column is-1 is-hidden-mobile"
          >
            <p
              className="datadescription"
            />
          </div>
          <p
            className="selected-data column is-hidden-mobile"
          />
          <div
            className="column details"
          >
            <h3
              className="is-size-6"
            >
              occurrenceForm.darwinCoreFields.step.stepDescription
            </h3>
            <h2
              className="step-title"
            >
              6 - occurrenceForm.darwinCoreFields.step.stepTitle
            </h2>
          </div>
        </header>
      </StepHeader>
    </NotConfirmedStepHeader>
    <div
      className="columns column is-centered"
    >
      <button
        className="review-and-submit-button button is-medium is-info"
        disabled={false}
        onClick={[Function]}
      >
        occurrenceForm.reviewAndSubmitButton
      </button>
    </div>
  </section>
</OccurrenceForm>
`;
