// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OccurrenceForm when creating new occurrence renders correctly 1`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <ActiveStepHeader
            activeStepIndex={0}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="active has-background-grey has-text-white"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered active has-background-grey has-text-white"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
            <StepFooter
              activeStepIndex={0}
              nextStep="occurrenceForm.occurrenceData.step.stepTitle"
              onContinueButtonClick={[Function]}
              onCopyPreviousDataClick={[Function]}
            >
              <div
                className="step-footer columns section"
              >
                <CopyPreviousData
                  onClick={[Function]}
                  visible={true}
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="copy-previous-data column is-narrow"
                      onClick={[Function]}
                    >
                      occurrenceForm.copyPreviousStep
                    </div>
                  </div>
                </CopyPreviousData>
                <ContinueButton
                  name="locationContinue"
                  onClick={[Function]}
                  value="occurrenceForm.occurrenceData.step.stepTitle"
                >
                  <button
                    className="continue-button button is-info"
                    name="locationContinue"
                    onClick={[Function]}
                  >
                    common.continueTo occurrenceform.occurrencedata.step.steptitle
                  </button>
                </ContinueButton>
              </div>
            </StepFooter>
          </ActiveStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={0}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-2 background-color-5"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={0}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={null}
                decimalLongitude={null}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-3 background-color-10"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={0}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-4 background-color-15"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={0}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={Array []}
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-5 background-color-20"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={0}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-6 background-color-25"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <div
            className="columns column is-centered"
          >
            <button
              className="review-and-submit-button button is-medium is-info"
              disabled={true}
              onClick={[Function]}
            >
              occurrenceForm.reviewAndSubmitButton
            </button>
          </div>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 2`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <ConfirmedStepHeader
            activeStepIndex={3}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.dataset.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.dataset.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Caprellids polulation structure in Usujiri, Hokkaido, Japan
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={3}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <OccurrenceDataSummary
                  basisOfRecord="humanObservation"
                  beginDate={1556496000000}
                  endDate={null}
                  lifeStage="larva"
                  occurrenceStatus="present"
                  scientificName=""
                  sex="male"
                />
              }
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.occurrenceData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <OccurrenceDataSummary
                    basisOfRecord="humanObservation"
                    beginDate={1556496000000}
                    endDate={null}
                    lifeStage="larva"
                    occurrenceStatus="present"
                    scientificName=""
                    sex="male"
                  >
                    <div>
                       29 April 2019 
                    </div>
                  </OccurrenceDataSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={3}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={0.12345}
                decimalLongitude={-0.54321}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.locationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <SelectedLocation
                  coordinateUncertainty={null}
                  decimalLatitude={0.12345}
                  decimalLongitude={-0.54321}
                  maximumDepth={null}
                  minimumDepth={null}
                  verbatimCoordinates=""
                  verbatimDepth=""
                />
              }
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.locationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <SelectedLocation
                    coordinateUncertainty={null}
                    decimalLatitude={0.12345}
                    decimalLongitude={-0.54321}
                    maximumDepth={null}
                    minimumDepth={null}
                    verbatimCoordinates=""
                    verbatimDepth=""
                  >
                    <div>
                      occurrenceForm.locationData.step.selectedData.latitude
                      : 
                      0.12345
                    </div>
                    <div>
                      occurrenceForm.locationData.step.selectedData.longitude
                      : 
                      -0.54321
                    </div>
                  </SelectedLocation>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ActiveStepHeader
            activeStepIndex={3}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="active has-background-grey has-text-white"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered active has-background-grey has-text-white"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
              <ObservationData
                observationData={
                  Object {
                    "catalogNumber": "",
                    "collectionCode": "",
                    "fieldNumber": "",
                    "identificationQualifier": "",
                    "identificationRemarks": "",
                    "identifiedBy": Array [],
                    "institutionCode": "",
                    "recordNumber": "",
                    "recordedBy": Array [],
                    "references": Array [],
                  }
                }
                onChange={[Function]}
              >
                <div
                  className="observation-data section is-fluid"
                >
                  <div
                    className="columns"
                  >
                    <InputText
                      className="institution-code is-3"
                      name="occurrenceForm.observationData.institutionCode"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field institution-code is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.institutionCode.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputText>
                    <InputText
                      className="collection-code is-3"
                      name="occurrenceForm.observationData.collectionCode"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field collection-code is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.collectionCode.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputText>
                  </div>
                  <div
                    className="columns"
                  >
                    <InputText
                      className="field-number is-3"
                      name="occurrenceForm.observationData.fieldNumber"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field field-number is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.fieldNumber.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputText>
                    <InputText
                      className="catalog-number is-3"
                      name="occurrenceForm.observationData.catalogNumber"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field catalog-number is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.catalogNumber.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputText>
                    <InputText
                      className="record-number is-3"
                      name="occurrenceForm.observationData.recordNumber"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field record-number is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.recordNumber.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputText>
                  </div>
                  <div
                    className="columns"
                  >
                    <InputMultipleText
                      className="identified-by is-3"
                      name="occurrenceForm.observationData.identifiedBy"
                      onChange={[Function]}
                      values={Array []}
                    >
                      <div
                        className="column field identified-by is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.identifiedBy.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          placeholder="occurrenceForm.observationData.identifiedBy.placeholder"
                          type="text"
                          value=""
                        />
                        <p
                          className="help"
                        >
                          occurrenceForm.observationData.identifiedBy.help
                        </p>
                        <Tags
                          onDelete={[Function]}
                          strings={Array []}
                        >
                          <div
                            className="block"
                          />
                        </Tags>
                      </div>
                    </InputMultipleText>
                    <InputMultipleText
                      className="recorded-by is-3"
                      name="occurrenceForm.observationData.recordedBy"
                      onChange={[Function]}
                      values={Array []}
                    >
                      <div
                        className="column field recorded-by is-3"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.recordedBy.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          placeholder="occurrenceForm.observationData.recordedBy.placeholder"
                          type="text"
                          value=""
                        />
                        <p
                          className="help"
                        >
                          occurrenceForm.observationData.recordedBy.help
                        </p>
                        <Tags
                          onDelete={[Function]}
                          strings={Array []}
                        >
                          <div
                            className="block"
                          />
                        </Tags>
                      </div>
                    </InputMultipleText>
                  </div>
                  <div
                    className="columns"
                  >
                    <InputText
                      className="identification-qualifier is-9"
                      name="occurrenceForm.observationData.identificationQualifier"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field identification-qualifier is-9"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.identificationQualifier.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>
                    </InputText>
                  </div>
                  <div
                    className="columns"
                  >
                    <Textarea
                      className="identification-remarks is-9"
                      name="occurrenceForm.observationData.identificationRemarks"
                      onChange={[Function]}
                      value=""
                    >
                      <div
                        className="column field identification-remarks is-9"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.identificationRemarks.label
                        </label>
                        <textarea
                          className="textarea"
                          onChange={[Function]}
                          rows={5}
                          value=""
                        />
                      </div>
                    </Textarea>
                  </div>
                  <div
                    className="columns"
                  >
                    <InputMultipleText
                      className="references is-9"
                      labelComponent={[Function]}
                      name="occurrenceForm.observationData.references"
                      onChange={[Function]}
                      values={Array []}
                    >
                      <div
                        className="column field references is-9"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.observationData.references.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          placeholder="occurrenceForm.observationData.references.placeholder"
                          type="text"
                          value=""
                        />
                        <p
                          className="help"
                        >
                          occurrenceForm.observationData.references.help
                        </p>
                        <Tags
                          labelComponent={[Function]}
                          onDelete={[Function]}
                          strings={Array []}
                        >
                          <div
                            className="block"
                          />
                        </Tags>
                      </div>
                    </InputMultipleText>
                  </div>
                </div>
              </ObservationData>
            </StepHeader>
            <StepFooter
              activeStepIndex={3}
              nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
              onContinueButtonClick={[Function]}
              onCopyPreviousDataClick={[Function]}
            >
              <div
                className="step-footer columns section"
              >
                <CopyPreviousData
                  onClick={[Function]}
                  visible={true}
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="copy-previous-data column is-narrow"
                      onClick={[Function]}
                    >
                      occurrenceForm.copyPreviousStep
                    </div>
                  </div>
                </CopyPreviousData>
                <ContinueButton
                  name="locationContinue"
                  onClick={[Function]}
                  value="occurrenceForm.measurementOrFact.step.stepTitle"
                >
                  <button
                    className="continue-button button is-info"
                    name="locationContinue"
                    onClick={[Function]}
                  >
                    common.continueTo occurrenceform.measurementorfact.step.steptitle
                  </button>
                </ContinueButton>
              </div>
            </StepFooter>
          </ActiveStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={3}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={Array []}
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-5 background-color-20"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={3}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-6 background-color-25"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <div
            className="columns column is-centered"
          >
            <button
              className="review-and-submit-button button is-medium is-info"
              disabled={false}
              onClick={[Function]}
            >
              occurrenceForm.reviewAndSubmitButton
            </button>
          </div>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 3`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <ConfirmedStepHeader
            activeStepIndex={4}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.dataset.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.dataset.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Caprellids polulation structure in Usujiri, Hokkaido, Japan
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={4}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <OccurrenceDataSummary
                  basisOfRecord="humanObservation"
                  beginDate={1556496000000}
                  endDate={null}
                  lifeStage="larva"
                  occurrenceStatus="present"
                  scientificName=""
                  sex="male"
                />
              }
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.occurrenceData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <OccurrenceDataSummary
                    basisOfRecord="humanObservation"
                    beginDate={1556496000000}
                    endDate={null}
                    lifeStage="larva"
                    occurrenceStatus="present"
                    scientificName=""
                    sex="male"
                  >
                    <div>
                       29 April 2019 
                    </div>
                  </OccurrenceDataSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={4}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={0.12345}
                decimalLongitude={-0.54321}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.locationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <SelectedLocation
                  coordinateUncertainty={null}
                  decimalLatitude={0.12345}
                  decimalLongitude={-0.54321}
                  maximumDepth={null}
                  minimumDepth={null}
                  verbatimCoordinates=""
                  verbatimDepth=""
                />
              }
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.locationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <SelectedLocation
                    coordinateUncertainty={null}
                    decimalLatitude={0.12345}
                    decimalLongitude={-0.54321}
                    maximumDepth={null}
                    minimumDepth={null}
                    verbatimCoordinates=""
                    verbatimDepth=""
                  >
                    <div>
                      occurrenceForm.locationData.step.selectedData.latitude
                      : 
                      0.12345
                    </div>
                    <div>
                      occurrenceForm.locationData.step.selectedData.longitude
                      : 
                      -0.54321
                    </div>
                  </SelectedLocation>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={4}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Institution: institution code; Identified by: Indiana Jones"
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.observationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Institution: institution code; Identified by: Indiana Jones"
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.observationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Institution: institution code; Identified by: Indiana Jones
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ActiveStepHeader
            activeStepIndex={4}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={Array []}
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="active has-background-grey has-text-white"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered active has-background-grey has-text-white"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
              <MeasurementOrFact
                data={Array []}
                onChange={[Function]}
              >
                <div
                  className="measurement-or-fact section is-fluid"
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="column is-half"
                    >
                      <h1
                        className="title"
                      >
                        occurrenceForm.measurementOrFact.general.title
                      </h1>
                      <h2
                        className="subtitle"
                      >
                        occurrenceForm.measurementOrFact.general.subtitle
                      </h2>
                      <table
                        className="general table is-fullwidth is-striped is-hoverable"
                      >
                        <thead>
                          <tr>
                            <th
                              style={
                                Object {
                                  "width": "60%",
                                }
                              }
                            >
                              common.type
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "20%",
                                }
                              }
                            >
                              common.unit
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "10%",
                                }
                              }
                            >
                              common.value
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "10%",
                                }
                              }
                            />
                          </tr>
                        </thead>
                        <tbody>
                          <MeasurementRow
                            key="Pressure"
                            onAdd={[Function]}
                            type="Pressure"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                                  "name": "Decibars",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Pressure
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Decibars",
                                    ]
                                  }
                                  value="Decibars"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Decibars
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Decibars"
                                          onClick={[Function]}
                                        >
                                          Decibars
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Temperature"
                            onAdd={[Function]}
                            type="Temperature"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPAA",
                                  "name": "Degrees Celsius",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Temperature
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Degrees Celsius",
                                    ]
                                  }
                                  value="Degrees Celsius"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Degrees Celsius
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Degrees Celsius"
                                          onClick={[Function]}
                                        >
                                          Degrees Celsius
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Salinity"
                            onAdd={[Function]}
                            type="Salinity"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGKG",
                                  "name": "Grams per kilogram",
                                },
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                                  "name": "PSU (dimensionless)",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Salinity
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Grams per kilogram",
                                      "PSU (dimensionless)",
                                    ]
                                  }
                                  value="Grams per kilogram"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Grams per kilogram
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Grams per kilogram"
                                          onClick={[Function]}
                                        >
                                          Grams per kilogram
                                        </div>
                                        <div
                                          className="dropdown-item"
                                          key="PSU (dimensionless)"
                                          onClick={[Function]}
                                        >
                                          PSU (dimensionless)
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                        </tbody>
                      </table>
                      <h1
                        className="title"
                      >
                        occurrenceForm.measurementOrFact.specific.title
                      </h1>
                      <h2
                        className="subtitle"
                      >
                        occurrenceForm.measurementOrFact.specific.subtitle
                      </h2>
                      <table
                        className="specific table is-fullwidth is-striped is-hoverable"
                      >
                        <thead>
                          <tr>
                            <th
                              style={
                                Object {
                                  "width": "60%",
                                }
                              }
                            >
                              common.type
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "20%",
                                }
                              }
                            >
                              common.unit
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "10%",
                                }
                              }
                            >
                              common.value
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "10%",
                                }
                              }
                            />
                          </tr>
                        </thead>
                        <tbody>
                          <MeasurementRow
                            key="ObservedIndividualCount"
                            onAdd={[Function]}
                            type="ObservedIndividualCount"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                                  "name": "Dimensionless",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                ObservedIndividualCount
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Dimensionless",
                                    ]
                                  }
                                  value="Dimensionless"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Dimensionless
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Dimensionless"
                                          onClick={[Function]}
                                        >
                                          Dimensionless
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Abundance category of biological entity specified elsewhere"
                            onAdd={[Function]}
                            type="Abundance category of biological entity specified elsewhere"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UUUU/",
                                  "name": "Dimensionless",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Abundance category of biological entity specified elsewhere
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Dimensionless",
                                    ]
                                  }
                                  value="Dimensionless"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Dimensionless
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Dimensionless"
                                          onClick={[Function]}
                                        >
                                          Dimensionless
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Abundance of biological entity specified elsewhere per unit area of the bed"
                            onAdd={[Function]}
                            type="Abundance of biological entity specified elsewhere per unit area of the bed"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMS/",
                                  "name": "Number per square meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Abundance of biological entity specified elsewhere per unit area of the bed
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Number per square meter",
                                    ]
                                  }
                                  value="Number per square meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Number per square meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Number per square meter"
                                          onClick={[Function]}
                                        >
                                          Number per square meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Abundance of biological entity specified elsewhere per unit volume of the sediment"
                            onAdd={[Function]}
                            type="Abundance of biological entity specified elsewhere per unit volume of the sediment"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMM/",
                                  "name": "Number per cubic meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Abundance of biological entity specified elsewhere per unit volume of the sediment
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Number per cubic meter",
                                    ]
                                  }
                                  value="Number per cubic meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Number per cubic meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Number per cubic meter"
                                          onClick={[Function]}
                                        >
                                          Number per cubic meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Abundance of biological entity specified elsewhere per unit volume of the water body"
                            onAdd={[Function]}
                            type="Abundance of biological entity specified elsewhere per unit volume of the water body"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPMM/",
                                  "name": "Number per cubic meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Abundance of biological entity specified elsewhere per unit volume of the water body
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Number per cubic meter",
                                    ]
                                  }
                                  value="Number per cubic meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Number per cubic meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Number per cubic meter"
                                          onClick={[Function]}
                                        >
                                          Number per cubic meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment"
                            onAdd={[Function]}
                            type="Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMC/",
                                  "name": "Milligrams per cubic meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Ash-free dry weight biomass (as carbon) of biological entity specified elsewhere per unit volume of the sediment
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Milligrams per cubic meter",
                                    ]
                                  }
                                  value="Milligrams per cubic meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Milligrams per cubic meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Milligrams per cubic meter"
                                          onClick={[Function]}
                                        >
                                          Milligrams per cubic meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed"
                            onAdd={[Function]}
                            type="Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMS/",
                                  "name": "Milligrams per square meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Ash-free dry weight biomass of biological entity specified elsewhere per unit area of the bed
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Milligrams per square meter",
                                    ]
                                  }
                                  value="Milligrams per square meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Milligrams per square meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Milligrams per square meter"
                                          onClick={[Function]}
                                        >
                                          Milligrams per square meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body"
                            onAdd={[Function]}
                            type="Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UMMC/",
                                  "name": "Milligrams per cubic meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Ash-free dry weight biomass of biological entity specified elsewhere per unit volume of the water body
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Milligrams per cubic meter",
                                    ]
                                  }
                                  value="Milligrams per cubic meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Milligrams per cubic meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Milligrams per cubic meter"
                                          onClick={[Function]}
                                        >
                                          Milligrams per cubic meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Length of biological entity specified elsewhere"
                            onAdd={[Function]}
                            type="Length of biological entity specified elsewhere"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/KGXX/",
                                  "name": "Meter",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Length of biological entity specified elsewhere
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Meter",
                                    ]
                                  }
                                  value="Meter"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Meter
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Meter"
                                          onClick={[Function]}
                                        >
                                          Meter
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                          <MeasurementRow
                            key="Specimen weight of biological entity specified elsewhere"
                            onAdd={[Function]}
                            type="Specimen weight of biological entity specified elsewhere"
                            units={
                              Array [
                                Object {
                                  "id": "http://vocab.nerc.ac.uk/collection/P06/current/UGRM/",
                                  "name": "Grams",
                                },
                              ]
                            }
                          >
                            <tr
                              className="measurement-row fieldrow"
                            >
                              <td>
                                Specimen weight of biological entity specified elsewhere
                              </td>
                              <td>
                                <Dropdown
                                  onChange={[Function]}
                                  options={
                                    Array [
                                      "Grams",
                                    ]
                                  }
                                  value="Grams"
                                >
                                  <div
                                    className="dropdown"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="dropdown-trigger"
                                    >
                                      <button
                                        aria-controls="dropdown-menu"
                                        aria-haspopup="true"
                                        className="button"
                                      >
                                        <span
                                          className="selected-value"
                                        >
                                          Grams
                                        </span>
                                        <span
                                          className="icon is-small"
                                        >
                                          <FontAwesomeIcon
                                            className="angle-down"
                                            icon="angle-down"
                                          >
                                            <i
                                              className="angle-down"
                                              icon="angle-down"
                                            />
                                          </FontAwesomeIcon>
                                        </span>
                                      </button>
                                    </div>
                                    <div
                                      className="dropdown-menu"
                                      id="dropdown-menu"
                                      role="menu"
                                    >
                                      <div
                                        className="dropdown-content"
                                      >
                                        <div
                                          className="dropdown-item is-active"
                                          key="Grams"
                                          onClick={[Function]}
                                        >
                                          Grams
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </Dropdown>
                              </td>
                              <td>
                                <input
                                  className="input"
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="text"
                                  value=""
                                />
                              </td>
                              <td>
                                <a
                                  className="add button"
                                  onClick={[Function]}
                                >
                                  common.add
                                </a>
                              </td>
                            </tr>
                          </MeasurementRow>
                        </tbody>
                      </table>
                    </div>
                    <div
                      className="column is-half supplied"
                    >
                      <h1
                        className="title"
                      >
                        occurrenceForm.measurementOrFact.supplied.title
                      </h1>
                      <h2
                        className="subtitle"
                      >
                         
                      </h2>
                      <table
                        className="supplied table is-fullwidth is-striped is-hoverable"
                      >
                        <thead>
                          <tr>
                            <th
                              style={
                                Object {
                                  "width": "60%",
                                }
                              }
                            >
                              common.type
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "20%",
                                }
                              }
                            >
                              common.unit
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "10%",
                                }
                              }
                            >
                              common.value
                            </th>
                            <th
                              style={
                                Object {
                                  "width": "5%",
                                }
                              }
                            />
                            <th
                              style={
                                Object {
                                  "width": "5%",
                                }
                              }
                            />
                          </tr>
                        </thead>
                        <tbody />
                      </table>
                    </div>
                  </div>
                </div>
              </MeasurementOrFact>
            </StepHeader>
            <StepFooter
              activeStepIndex={4}
              nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
              onContinueButtonClick={[Function]}
              onCopyPreviousDataClick={[Function]}
            >
              <div
                className="step-footer columns section"
              >
                <CopyPreviousData
                  onClick={[Function]}
                  visible={true}
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="copy-previous-data column is-narrow"
                      onClick={[Function]}
                    >
                      occurrenceForm.copyPreviousStep
                    </div>
                  </div>
                </CopyPreviousData>
                <ContinueButton
                  name="locationContinue"
                  onClick={[Function]}
                  value="occurrenceForm.darwinCoreFields.step.stepTitle"
                >
                  <button
                    className="continue-button button is-info"
                    name="locationContinue"
                    onClick={[Function]}
                  >
                    common.continueTo occurrenceform.darwincorefields.step.steptitle
                  </button>
                </ContinueButton>
              </div>
            </StepFooter>
          </ActiveStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={4}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-6 background-color-25"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <div
            className="columns column is-centered"
          >
            <button
              className="review-and-submit-button button is-medium is-info"
              disabled={false}
              onClick={[Function]}
            >
              occurrenceForm.reviewAndSubmitButton
            </button>
          </div>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 4`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.dataset.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.dataset.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Caprellids polulation structure in Usujiri, Hokkaido, Japan
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <OccurrenceDataSummary
                  basisOfRecord="humanObservation"
                  beginDate={1556496000000}
                  endDate={null}
                  lifeStage="larva"
                  occurrenceStatus="present"
                  scientificName=""
                  sex="male"
                />
              }
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.occurrenceData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <OccurrenceDataSummary
                    basisOfRecord="humanObservation"
                    beginDate={1556496000000}
                    endDate={null}
                    lifeStage="larva"
                    occurrenceStatus="present"
                    scientificName=""
                    sex="male"
                  >
                    <div>
                       29 April 2019 
                    </div>
                  </OccurrenceDataSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={0.12345}
                decimalLongitude={-0.54321}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.locationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <SelectedLocation
                  coordinateUncertainty={null}
                  decimalLatitude={0.12345}
                  decimalLongitude={-0.54321}
                  maximumDepth={null}
                  minimumDepth={null}
                  verbatimCoordinates=""
                  verbatimDepth=""
                />
              }
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.locationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <SelectedLocation
                    coordinateUncertainty={null}
                    decimalLatitude={0.12345}
                    decimalLongitude={-0.54321}
                    maximumDepth={null}
                    minimumDepth={null}
                    verbatimCoordinates=""
                    verbatimDepth=""
                  >
                    <div>
                      occurrenceForm.locationData.step.selectedData.latitude
                      : 
                      0.12345
                    </div>
                    <div>
                      occurrenceForm.locationData.step.selectedData.longitude
                      : 
                      -0.54321
                    </div>
                  </SelectedLocation>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Institution: institution code; Identified by: Indiana Jones"
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.observationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Institution: institution code; Identified by: Indiana Jones"
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.observationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Institution: institution code; Identified by: Indiana Jones
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={
                  Array [
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "10",
                    },
                  ]
                }
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <MeasurementOrFactSummary
                  data={
                    Array [
                      Object {
                        "type": "Pressure",
                        "unit": "Decibars",
                        "units": Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ],
                        "value": "10",
                      },
                    ]
                  }
                />
              }
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.measurementOrFact.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <MeasurementOrFactSummary
                    data={
                      Array [
                        Object {
                          "type": "Pressure",
                          "unit": "Decibars",
                          "units": Array [
                            Object {
                              "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                              "name": "Decibars",
                            },
                          ],
                          "value": "10",
                        },
                      ]
                    }
                  >
                    <div>
                      occurrenceForm.measurementOrFact.step.title {"number":1}
                    </div>
                  </MeasurementOrFactSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ActiveStepHeader
            activeStepIndex={5}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="active has-background-grey has-text-white"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered active has-background-grey has-text-white"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
              <DarwinCoreFields
                fields={Array []}
                onChange={[Function]}
              >
                <div
                  className="darwin-core-fields section is-fluid"
                >
                  <h1
                    className="title"
                  >
                    occurrenceForm.darwinCoreFields.title
                  </h1>
                  <h2
                    className="subtitle"
                  >
                    occurrenceForm.darwinCoreFields.subtitle
                     
                    occurrenceForm.darwinCoreFields.tip
                  </h2>
                  <div
                    className="columns is-grouped"
                  >
                    <InputText
                      className="is-3 field-name"
                      name="occurrenceForm.darwinCoreFields.fieldName"
                      onChange={[Function]}
                    >
                      <div
                        className="column field is-3 field-name"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.darwinCoreFields.fieldName.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </InputText>
                    <InputText
                      className="is-3 value"
                      name="occurrenceForm.darwinCoreFields.value"
                      onChange={[Function]}
                    >
                      <div
                        className="column field is-3 value"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.darwinCoreFields.value.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </InputText>
                    <div
                      className="column add"
                    >
                      <span
                        className="label"
                      >
                         
                      </span>
                      <button
                        className="button"
                        onClick={[Function]}
                      >
                        common.add
                      </button>
                    </div>
                  </div>
                  <table
                    className="table is-fullwidth"
                  >
                    <thead>
                      <tr>
                        <th>
                          common.name
                        </th>
                        <th>
                          common.value
                        </th>
                        <th />
                      </tr>
                    </thead>
                    <tbody />
                  </table>
                </div>
              </DarwinCoreFields>
            </StepHeader>
            <StepFooter
              activeStepIndex={5}
              onContinueButtonClick={[Function]}
              onCopyPreviousDataClick={[Function]}
            >
              <div
                className="step-footer columns section"
              >
                <CopyPreviousData
                  onClick={[Function]}
                  visible={true}
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="copy-previous-data column is-narrow"
                      onClick={[Function]}
                    >
                      occurrenceForm.copyPreviousStep
                    </div>
                  </div>
                </CopyPreviousData>
              </div>
            </StepFooter>
          </ActiveStepHeader>
          <div
            className="columns column is-centered"
          >
            <button
              className="review-and-submit-button button is-medium is-info"
              disabled={false}
              onClick={[Function]}
            >
              occurrenceForm.reviewAndSubmitButton
            </button>
          </div>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 5`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.dataset.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.dataset.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Caprellids polulation structure in Usujiri, Hokkaido, Japan
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <OccurrenceDataSummary
                  basisOfRecord="humanObservation"
                  beginDate={1556496000000}
                  endDate={null}
                  lifeStage="larva"
                  occurrenceStatus="present"
                  scientificName=""
                  sex="male"
                />
              }
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.occurrenceData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <OccurrenceDataSummary
                    basisOfRecord="humanObservation"
                    beginDate={1556496000000}
                    endDate={null}
                    lifeStage="larva"
                    occurrenceStatus="present"
                    scientificName=""
                    sex="male"
                  >
                    <div>
                       29 April 2019 
                    </div>
                  </OccurrenceDataSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={0.12345}
                decimalLongitude={-0.54321}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.locationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <SelectedLocation
                  coordinateUncertainty={null}
                  decimalLatitude={0.12345}
                  decimalLongitude={-0.54321}
                  maximumDepth={null}
                  minimumDepth={null}
                  verbatimCoordinates=""
                  verbatimDepth=""
                />
              }
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.locationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <SelectedLocation
                    coordinateUncertainty={null}
                    decimalLatitude={0.12345}
                    decimalLongitude={-0.54321}
                    maximumDepth={null}
                    minimumDepth={null}
                    verbatimCoordinates=""
                    verbatimDepth=""
                  >
                    <div>
                      occurrenceForm.locationData.step.selectedData.latitude
                      : 
                      0.12345
                    </div>
                    <div>
                      occurrenceForm.locationData.step.selectedData.longitude
                      : 
                      -0.54321
                    </div>
                  </SelectedLocation>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Institution: institution code; Identified by: Indiana Jones"
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.observationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Institution: institution code; Identified by: Indiana Jones"
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.observationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Institution: institution code; Identified by: Indiana Jones
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={
                  Array [
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "10",
                    },
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "20",
                    },
                  ]
                }
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <MeasurementOrFactSummary
                  data={
                    Array [
                      Object {
                        "type": "Pressure",
                        "unit": "Decibars",
                        "units": Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ],
                        "value": "10",
                      },
                      Object {
                        "type": "Pressure",
                        "unit": "Decibars",
                        "units": Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ],
                        "value": "20",
                      },
                    ]
                  }
                />
              }
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.measurementOrFact.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <MeasurementOrFactSummary
                    data={
                      Array [
                        Object {
                          "type": "Pressure",
                          "unit": "Decibars",
                          "units": Array [
                            Object {
                              "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                              "name": "Decibars",
                            },
                          ],
                          "value": "10",
                        },
                        Object {
                          "type": "Pressure",
                          "unit": "Decibars",
                          "units": Array [
                            Object {
                              "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                              "name": "Decibars",
                            },
                          ],
                          "value": "20",
                        },
                      ]
                    }
                  >
                    <div>
                      occurrenceForm.measurementOrFact.step.title {"number":2}
                    </div>
                  </MeasurementOrFactSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ActiveStepHeader
            activeStepIndex={5}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="active has-background-grey has-text-white"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered active has-background-grey has-text-white"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
              <DarwinCoreFields
                fields={Array []}
                onChange={[Function]}
              >
                <div
                  className="darwin-core-fields section is-fluid"
                >
                  <h1
                    className="title"
                  >
                    occurrenceForm.darwinCoreFields.title
                  </h1>
                  <h2
                    className="subtitle"
                  >
                    occurrenceForm.darwinCoreFields.subtitle
                     
                    occurrenceForm.darwinCoreFields.tip
                  </h2>
                  <div
                    className="columns is-grouped"
                  >
                    <InputText
                      className="is-3 field-name"
                      name="occurrenceForm.darwinCoreFields.fieldName"
                      onChange={[Function]}
                    >
                      <div
                        className="column field is-3 field-name"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.darwinCoreFields.fieldName.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </InputText>
                    <InputText
                      className="is-3 value"
                      name="occurrenceForm.darwinCoreFields.value"
                      onChange={[Function]}
                    >
                      <div
                        className="column field is-3 value"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.darwinCoreFields.value.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </InputText>
                    <div
                      className="column add"
                    >
                      <span
                        className="label"
                      >
                         
                      </span>
                      <button
                        className="button"
                        onClick={[Function]}
                      >
                        common.add
                      </button>
                    </div>
                  </div>
                  <table
                    className="table is-fullwidth"
                  >
                    <thead>
                      <tr>
                        <th>
                          common.name
                        </th>
                        <th>
                          common.value
                        </th>
                        <th />
                      </tr>
                    </thead>
                    <tbody />
                  </table>
                </div>
              </DarwinCoreFields>
            </StepHeader>
            <StepFooter
              activeStepIndex={5}
              onContinueButtonClick={[Function]}
              onCopyPreviousDataClick={[Function]}
            >
              <div
                className="step-footer columns section"
              >
                <CopyPreviousData
                  onClick={[Function]}
                  visible={true}
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="copy-previous-data column is-narrow"
                      onClick={[Function]}
                    >
                      occurrenceForm.copyPreviousStep
                    </div>
                  </div>
                </CopyPreviousData>
              </div>
            </StepFooter>
          </ActiveStepHeader>
          <div
            className="columns column is-centered"
          >
            <button
              className="review-and-submit-button button is-medium is-info"
              disabled={false}
              onClick={[Function]}
            >
              occurrenceForm.reviewAndSubmitButton
            </button>
          </div>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 6`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.dataset.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.dataset.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Caprellids polulation structure in Usujiri, Hokkaido, Japan
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <OccurrenceDataSummary
                  basisOfRecord="humanObservation"
                  beginDate={1556496000000}
                  endDate={null}
                  lifeStage="larva"
                  occurrenceStatus="present"
                  scientificName=""
                  sex="male"
                />
              }
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.occurrenceData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <OccurrenceDataSummary
                    basisOfRecord="humanObservation"
                    beginDate={1556496000000}
                    endDate={null}
                    lifeStage="larva"
                    occurrenceStatus="present"
                    scientificName=""
                    sex="male"
                  >
                    <div>
                       29 April 2019 
                    </div>
                  </OccurrenceDataSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={0.12345}
                decimalLongitude={-0.54321}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.locationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <SelectedLocation
                  coordinateUncertainty={null}
                  decimalLatitude={0.12345}
                  decimalLongitude={-0.54321}
                  maximumDepth={null}
                  minimumDepth={null}
                  verbatimCoordinates=""
                  verbatimDepth=""
                />
              }
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.locationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <SelectedLocation
                    coordinateUncertainty={null}
                    decimalLatitude={0.12345}
                    decimalLongitude={-0.54321}
                    maximumDepth={null}
                    minimumDepth={null}
                    verbatimCoordinates=""
                    verbatimDepth=""
                  >
                    <div>
                      occurrenceForm.locationData.step.selectedData.latitude
                      : 
                      0.12345
                    </div>
                    <div>
                      occurrenceForm.locationData.step.selectedData.longitude
                      : 
                      -0.54321
                    </div>
                  </SelectedLocation>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Institution: institution code; Identified by: Indiana Jones"
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.observationData.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData="Institution: institution code; Identified by: Indiana Jones"
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.observationData.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  Institution: institution code; Identified by: Indiana Jones
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ConfirmedStepHeader
            activeStepIndex={5}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={
                  Array [
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "10",
                    },
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "20",
                    },
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "20",
                    },
                  ]
                }
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="confirmed has-background-white has-text-black"
              dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
              iconVisible={true}
              onStepTitleClick={[Function]}
              selectedData={
                <MeasurementOrFactSummary
                  data={
                    Array [
                      Object {
                        "type": "Pressure",
                        "unit": "Decibars",
                        "units": Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ],
                        "value": "10",
                      },
                      Object {
                        "type": "Pressure",
                        "unit": "Decibars",
                        "units": Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ],
                        "value": "20",
                      },
                      Object {
                        "type": "Pressure",
                        "unit": "Decibars",
                        "units": Array [
                          Object {
                            "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                            "name": "Decibars",
                          },
                        ],
                        "value": "20",
                      },
                    ]
                  }
                />
              }
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered confirmed has-background-white has-text-black"
                onClick={[Function]}
              >
                <div
                  className="column is-1"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b>
                      occurrenceForm.measurementOrFact.step.dataDescription
                    </b>
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5"
                >
                  <MeasurementOrFactSummary
                    data={
                      Array [
                        Object {
                          "type": "Pressure",
                          "unit": "Decibars",
                          "units": Array [
                            Object {
                              "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                              "name": "Decibars",
                            },
                          ],
                          "value": "10",
                        },
                        Object {
                          "type": "Pressure",
                          "unit": "Decibars",
                          "units": Array [
                            Object {
                              "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                              "name": "Decibars",
                            },
                          ],
                          "value": "20",
                        },
                        Object {
                          "type": "Pressure",
                          "unit": "Decibars",
                          "units": Array [
                            Object {
                              "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                              "name": "Decibars",
                            },
                          ],
                          "value": "20",
                        },
                      ]
                    }
                  >
                    <div>
                      occurrenceForm.measurementOrFact.step.title {"number":3}
                    </div>
                  </MeasurementOrFactSummary>
                </div>
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <FontAwesomeIcon
                      className="check-circle"
                      icon="check-circle"
                    >
                      <i
                        className="check-circle"
                        icon="check-circle"
                      />
                    </FontAwesomeIcon>
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </ConfirmedStepHeader>
          <ActiveStepHeader
            activeStepIndex={5}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="active has-background-grey has-text-white"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered active has-background-grey has-text-white"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
              <DarwinCoreFields
                fields={Array []}
                onChange={[Function]}
              >
                <div
                  className="darwin-core-fields section is-fluid"
                >
                  <h1
                    className="title"
                  >
                    occurrenceForm.darwinCoreFields.title
                  </h1>
                  <h2
                    className="subtitle"
                  >
                    occurrenceForm.darwinCoreFields.subtitle
                     
                    occurrenceForm.darwinCoreFields.tip
                  </h2>
                  <div
                    className="columns is-grouped"
                  >
                    <InputText
                      className="is-3 field-name"
                      name="occurrenceForm.darwinCoreFields.fieldName"
                      onChange={[Function]}
                    >
                      <div
                        className="column field is-3 field-name"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.darwinCoreFields.fieldName.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </InputText>
                    <InputText
                      className="is-3 value"
                      name="occurrenceForm.darwinCoreFields.value"
                      onChange={[Function]}
                    >
                      <div
                        className="column field is-3 value"
                      >
                        <label
                          className="label"
                        >
                          occurrenceForm.darwinCoreFields.value.label
                        </label>
                        <input
                          className="input"
                          onChange={[Function]}
                          type="text"
                        />
                      </div>
                    </InputText>
                    <div
                      className="column add"
                    >
                      <span
                        className="label"
                      >
                         
                      </span>
                      <button
                        className="button"
                        onClick={[Function]}
                      >
                        common.add
                      </button>
                    </div>
                  </div>
                  <table
                    className="table is-fullwidth"
                  >
                    <thead>
                      <tr>
                        <th>
                          common.name
                        </th>
                        <th>
                          common.value
                        </th>
                        <th />
                      </tr>
                    </thead>
                    <tbody />
                  </table>
                </div>
              </DarwinCoreFields>
            </StepHeader>
            <StepFooter
              activeStepIndex={5}
              onContinueButtonClick={[Function]}
              onCopyPreviousDataClick={[Function]}
            >
              <div
                className="step-footer columns section"
              >
                <CopyPreviousData
                  onClick={[Function]}
                  visible={true}
                >
                  <div
                    className="columns"
                  >
                    <div
                      className="copy-previous-data column is-narrow"
                      onClick={[Function]}
                    >
                      occurrenceForm.copyPreviousStep
                    </div>
                  </div>
                </CopyPreviousData>
              </div>
            </StepFooter>
          </ActiveStepHeader>
          <div
            className="columns column is-centered"
          >
            <button
              className="review-and-submit-button button is-medium is-info"
              disabled={false}
              onClick={[Function]}
            >
              occurrenceForm.reviewAndSubmitButton
            </button>
          </div>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;

exports[`OccurrenceForm when creating new occurrence renders correctly 7`] = `
<AuthProvider>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/input-data/update",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/input-data/update",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/input-data/update",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OccurrenceForm>
        <section
          className="section"
        >
          <NotConfirmedStepHeader
            activeStepIndex={null}
            className="step-1 background-color-0"
            dataDescription="occurrenceForm.dataset.step.dataDescription"
            key="occurrenceForm.dataset.step.stepTitle"
            nextStep="occurrenceForm.occurrenceData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Caprellids polulation structure in Usujiri, Hokkaido, Japan"
            stepDescription="occurrenceForm.dataset.step.stepDescription"
            stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-1 background-color-0"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.dataset.step.stepDescription"
              stepTitle="1 - occurrenceForm.dataset.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-1 background-color-0"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.dataset.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      1 - occurrenceForm.dataset.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={null}
            className="step-2 background-color-5"
            dataDescription="occurrenceForm.occurrenceData.step.dataDescription"
            key="occurrenceForm.occurrenceData.step.stepTitle"
            nextStep="occurrenceForm.locationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <OccurrenceDataSummary
                basisOfRecord="humanObservation"
                beginDate={1556496000000}
                endDate={null}
                lifeStage="larva"
                occurrenceStatus="present"
                scientificName=""
                sex="male"
              />
            }
            stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
            stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-2 background-color-5"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.occurrenceData.step.stepDescription"
              stepTitle="2 - occurrenceForm.occurrenceData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-2 background-color-5"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.occurrenceData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      2 - occurrenceForm.occurrenceData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={null}
            className="step-3 background-color-10"
            dataDescription="occurrenceForm.locationData.step.dataDescription"
            key="occurrenceForm.locationData.step.stepTitle"
            nextStep="occurrenceForm.observationData.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <SelectedLocation
                coordinateUncertainty={null}
                decimalLatitude={0.12345}
                decimalLongitude={-0.54321}
                maximumDepth={null}
                minimumDepth={null}
                verbatimCoordinates=""
                verbatimDepth=""
              />
            }
            stepDescription="occurrenceForm.locationData.step.stepDescription"
            stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-3 background-color-10"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.locationData.step.stepDescription"
              stepTitle="3 - occurrenceForm.locationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-3 background-color-10"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.locationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      3 - occurrenceForm.locationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={null}
            className="step-4 background-color-15"
            dataDescription="occurrenceForm.observationData.step.dataDescription"
            key="occurrenceForm.observationData.step.stepTitle"
            nextStep="occurrenceForm.measurementOrFact.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData="Institution: institution code; Identified by: Indiana Jones"
            stepDescription="occurrenceForm.observationData.step.stepDescription"
            stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-4 background-color-15"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.observationData.step.stepDescription"
              stepTitle="4 - occurrenceForm.observationData.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-4 background-color-15"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.observationData.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      4 - occurrenceForm.observationData.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={null}
            className="step-5 background-color-20"
            dataDescription="occurrenceForm.measurementOrFact.step.dataDescription"
            key="occurrenceForm.measurementOrFact.step.stepTitle"
            nextStep="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData={
              <MeasurementOrFactSummary
                data={
                  Array [
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "10",
                    },
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "20",
                    },
                    Object {
                      "type": "Pressure",
                      "unit": "Decibars",
                      "units": Array [
                        Object {
                          "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                          "name": "Decibars",
                        },
                      ],
                      "value": "20",
                    },
                  ]
                }
              />
            }
            stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
            stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-5 background-color-20"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.measurementOrFact.step.stepDescription"
              stepTitle="5 - occurrenceForm.measurementOrFact.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-5 background-color-20"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.measurementOrFact.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      5 - occurrenceForm.measurementOrFact.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <NotConfirmedStepHeader
            activeStepIndex={null}
            className="step-6 background-color-25"
            dataDescription=""
            key="occurrenceForm.darwinCoreFields.step.stepTitle"
            onContinueButtonClick={[Function]}
            onCopyPreviousDataClick={[Function]}
            onStepTitleClick={[Function]}
            selectedData=""
            stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
            stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            totalSteps={5}
          >
            <StepHeader
              className="not-confirmed has-text-white step-6 background-color-25"
              dataDescription=""
              iconVisible={false}
              onStepTitleClick={[Function]}
              selectedData=""
              stepDescription="occurrenceForm.darwinCoreFields.step.stepDescription"
              stepTitle="6 - occurrenceForm.darwinCoreFields.step.stepTitle"
            >
              <div
                className="step-header columns is-vcentered not-confirmed has-text-white step-6 background-color-25"
                onClick={[Function]}
              >
                <div
                  className="column is-1 is-hidden-mobile"
                >
                  <p
                    className="is-size-5 is-uppercase"
                  >
                    <b />
                  </p>
                </div>
                <div
                  className="selected-data column is-7 is-size-5 is-hidden-mobile"
                />
                <div
                  className="column details"
                >
                  <div
                    className="is-size-6"
                  >
                    occurrenceForm.darwinCoreFields.step.stepDescription
                  </div>
                  <div
                    className="is-size-5 is-uppercase"
                  >
                    <b
                      className="step-title"
                    >
                      6 - occurrenceForm.darwinCoreFields.step.stepTitle
                    </b>
                  </div>
                </div>
              </div>
            </StepHeader>
          </NotConfirmedStepHeader>
          <FinalSummary
            darwinCoreFields={
              Array [
                Object {
                  "name": "name-1",
                  "value": "value-1",
                },
                Object {
                  "name": "name-3",
                  "value": "value-3",
                },
              ]
            }
            dataset={
              Object {
                "abstract": Object {
                  "paragraphs": Array [
                    "Population structure data of Caprella species used in the article \\"Hosono T (2014) Temperature explains reproductive dynamics in caprellids at different latitudes. Marine Ecology Progress Series 511:129-141\\"",
                  ],
                },
                "contacts": Array [
                  Object {
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "creators": Array [
                  Object {
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "id": "wEaBfmFyQhYCdsk",
                "keywordSets": Array [
                  Object {
                    "keywordThesaurus": "GBIF Dataset Type Vocabulary: http://rs.gbif.org/vocabulary/gbif/dataset_type.xml",
                    "keywords": Array [
                      "Samplingevent",
                    ],
                  },
                ],
                "language": "en",
                "license": Object {
                  "title": "Creative Commons Attribution Non Commercial (CC-BY-NC) 4.0 License",
                  "url": "http://creativecommons.org/licenses/by-nc/4.0/legalcode",
                },
                "meta": Object {
                  "dwcTables": Object {
                    "core": "event",
                    "extensions": Array [
                      "emof",
                      "occurrence",
                    ],
                  },
                  "type": "event",
                },
                "metadataProviders": Array [
                  Object {
                    "electronicMailAddress": "hosonot@jamstec.go.jp",
                    "individualName": Object {
                      "givenName": "Takashi",
                      "surName": "Hosono",
                    },
                  },
                ],
                "title": Object {
                  "language": "en",
                  "value": "Caprellids polulation structure in Usujiri, Hokkaido, Japan",
                },
              }
            }
            errorMessage=""
            errorVisible={false}
            locationData={
              Object {
                "coordinateUncertainty": null,
                "decimalLatitude": 0.12345,
                "decimalLongitude": -0.54321,
                "maximumDepth": null,
                "minimumDepth": null,
                "verbatimCoordinates": "",
                "verbatimDepth": "",
              }
            }
            measurements={
              Array [
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "10",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
                Object {
                  "type": "Pressure",
                  "unit": "Decibars",
                  "units": Array [
                    Object {
                      "id": "http://vocab.nerc.ac.uk/collection/P06/current/UPDB/",
                      "name": "Decibars",
                    },
                  ],
                  "value": "20",
                },
              ]
            }
            observationData={
              Object {
                "catalogNumber": "",
                "collectionCode": "",
                "fieldNumber": "",
                "identificationQualifier": "",
                "identificationRemarks": "",
                "identifiedBy": Array [
                  "Indiana Jones",
                ],
                "institutionCode": "institution code",
                "recordNumber": "",
                "recordedBy": Array [],
                "references": Array [],
              }
            }
            occurrenceData={
              Object {
                "basisOfRecord": "humanObservation",
                "beginDate": 1556496000000,
                "endDate": null,
                "lifeStage": "larva",
                "occurrenceStatus": "present",
                "scientificName": "",
                "sex": "male",
              }
            }
            onChangeClick={[Function]}
            onCreateFreshClick={[Function]}
            onCreateFromThisClick={[Function]}
            onErrorClose={[Function]}
            onSubmitClick={[Function]}
            successMessageType="create"
            successVisible={false}
          >
            <div
              className="final-summary section is-fluid"
            >
              <div
                className="columns is-centered"
              >
                <h1
                  className="final-summary-title title is-3"
                >
                  occurrenceForm.finalSummary.title
                </h1>
              </div>
              <SubmitEntryButton
                onClick={[Function]}
              >
                <div
                  className="submit-entry-button columns is-mobile is-centered"
                >
                  <button
                    className="button is-info is-medium"
                    onClick={[Function]}
                  >
                    common.submit
                  </button>
                </div>
              </SubmitEntryButton>
              <section
                className="dataset-summary"
              >
                <SectionTitle>
                  <h2
                    className="title is-4"
                  >
                    1 - 
                    occurrenceForm.dataset.step.stepTitle
                  </h2>
                </SectionTitle>
                <p>
                  Caprellids polulation structure in Usujiri, Hokkaido, Japan
                </p>
                <ChangeButton
                  onClick={[Function]}
                >
                  <button
                    className="change-button button"
                    onClick={[Function]}
                  >
                    common.change
                  </button>
                </ChangeButton>
              </section>
              <section
                className="occurrence-data-summary"
              >
                <SectionTitle>
                  <h2
                    className="title is-4"
                  >
                    2 - 
                    occurrenceForm.occurrenceData.step.stepTitle
                  </h2>
                </SectionTitle>
                <table
                  className="table is-striped is-fullwidth is-hoverable"
                >
                  <NameValueHeader>
                    <thead>
                      <tr>
                        <th
                          className="type"
                        >
                          common.name
                        </th>
                        <th
                          className="value"
                        >
                          common.value
                        </th>
                      </tr>
                    </thead>
                  </NameValueHeader>
                  <tbody>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.scientificName"
                      value=""
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.scientificName
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.eventBeginDate"
                      value="29 April 2019"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.eventBeginDate
                        </td>
                        <td
                          className="value"
                        >
                          29 April 2019
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.eventEndDate"
                      value={null}
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.eventEndDate
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.occurrenceStatus.title"
                      value="occurrenceForm.occurrenceData.occurrenceStatus.present"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.occurrenceStatus.title
                        </td>
                        <td
                          className="value"
                        >
                          occurrenceForm.occurrenceData.occurrenceStatus.present
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.basisOfRecord.title"
                      value="occurrenceForm.occurrenceData.basisOfRecord.humanObservation"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.basisOfRecord.title
                        </td>
                        <td
                          className="value"
                        >
                          occurrenceForm.occurrenceData.basisOfRecord.humanObservation
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.sex.title"
                      value="occurrenceForm.occurrenceData.sex.male"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.sex.title
                        </td>
                        <td
                          className="value"
                        >
                          occurrenceForm.occurrenceData.sex.male
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.occurrenceData.lifeStage.title"
                      value="occurrenceForm.occurrenceData.lifeStage.larva"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.occurrenceData.lifeStage.title
                        </td>
                        <td
                          className="value"
                        >
                          occurrenceForm.occurrenceData.lifeStage.larva
                        </td>
                      </tr>
                    </NameValueRow>
                  </tbody>
                </table>
                <ChangeButton
                  onClick={[Function]}
                >
                  <button
                    className="change-button button"
                    onClick={[Function]}
                  >
                    common.change
                  </button>
                </ChangeButton>
              </section>
              <section
                className="location-data-summary"
              >
                <SectionTitle>
                  <h2
                    className="title is-4"
                  >
                    3 - 
                    occurrenceForm.locationData.step.stepTitle
                  </h2>
                </SectionTitle>
                <table
                  className="table is-striped is-fullwidth is-hoverable"
                >
                  <NameValueHeader>
                    <thead>
                      <tr>
                        <th
                          className="type"
                        >
                          common.name
                        </th>
                        <th
                          className="value"
                        >
                          common.value
                        </th>
                      </tr>
                    </thead>
                  </NameValueHeader>
                  <tbody>
                    <NameValueRow
                      name="occurrenceForm.locationData.decimalLatitude.label"
                      value={0.12345}
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.decimalLatitude.label
                        </td>
                        <td
                          className="value"
                        >
                          0.12345
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.locationData.decimalLongitude.label"
                      value={-0.54321}
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.decimalLongitude.label
                        </td>
                        <td
                          className="value"
                        >
                          -0.54321
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.locationData.coordinateUncertainty.label"
                      value={null}
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.coordinateUncertainty.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.locationData.minimumDepth.label"
                      value={null}
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.minimumDepth.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.locationData.maximumDepth.label"
                      value={null}
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.maximumDepth.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                  </tbody>
                </table>
                <SectionSubtitle>
                  <h2
                    className="title is-5"
                  >
                    occurrenceForm.finalSummary.locationData.verbatimDataSubtitle
                  </h2>
                </SectionSubtitle>
                <table
                  className="table is-striped is-fullwidth is-hoverable"
                >
                  <tbody>
                    <NameValueRow
                      name="occurrenceForm.locationData.verbatimCoordinates.label"
                      value=""
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.verbatimCoordinates.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.locationData.verbatimDepth.label"
                      value=""
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.locationData.verbatimDepth.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                  </tbody>
                </table>
                <ChangeButton
                  onClick={[Function]}
                >
                  <button
                    className="change-button button"
                    onClick={[Function]}
                  >
                    common.change
                  </button>
                </ChangeButton>
              </section>
              <section
                className="observation-data-summary"
              >
                <SectionTitle>
                  <h2
                    className="title is-4"
                  >
                    4 - 
                    occurrenceForm.observationData.step.stepTitle
                  </h2>
                </SectionTitle>
                <SectionSubtitle>
                  <h2
                    className="title is-5"
                  >
                    occurrenceForm.finalSummary.observationData.catalogDataSubtitle
                  </h2>
                </SectionSubtitle>
                <div
                  className="content"
                >
                  <table
                    className="table is-striped is-fullwidth is-hoverable"
                  >
                    <NameValueHeader>
                      <thead>
                        <tr>
                          <th
                            className="type"
                          >
                            common.name
                          </th>
                          <th
                            className="value"
                          >
                            common.value
                          </th>
                        </tr>
                      </thead>
                    </NameValueHeader>
                    <tbody>
                      <NameValueRow
                        name="occurrenceForm.observationData.institutionCode.label"
                        value="institution code"
                      >
                        <tr
                          className="name-value-row fieldrow"
                        >
                          <td
                            className="name"
                          >
                            occurrenceForm.observationData.institutionCode.label
                          </td>
                          <td
                            className="value"
                          >
                            institution code
                          </td>
                        </tr>
                      </NameValueRow>
                      <NameValueRow
                        name="occurrenceForm.observationData.collectionCode.label"
                        value=""
                      >
                        <tr
                          className="name-value-row fieldrow"
                        >
                          <td
                            className="name"
                          >
                            occurrenceForm.observationData.collectionCode.label
                          </td>
                          <td
                            className="value"
                          >
                            —
                          </td>
                        </tr>
                      </NameValueRow>
                      <NameValueRow
                        name="occurrenceForm.observationData.fieldNumber.label"
                        value=""
                      >
                        <tr
                          className="name-value-row fieldrow"
                        >
                          <td
                            className="name"
                          >
                            occurrenceForm.observationData.fieldNumber.label
                          </td>
                          <td
                            className="value"
                          >
                            —
                          </td>
                        </tr>
                      </NameValueRow>
                      <NameValueRow
                        name="occurrenceForm.observationData.catalogNumber.label"
                        value=""
                      >
                        <tr
                          className="name-value-row fieldrow"
                        >
                          <td
                            className="name"
                          >
                            occurrenceForm.observationData.catalogNumber.label
                          </td>
                          <td
                            className="value"
                          >
                            —
                          </td>
                        </tr>
                      </NameValueRow>
                      <NameValueRow
                        name="occurrenceForm.observationData.recordNumber.label"
                        value=""
                      >
                        <tr
                          className="name-value-row fieldrow"
                        >
                          <td
                            className="name"
                          >
                            occurrenceForm.observationData.recordNumber.label
                          </td>
                          <td
                            className="value"
                          >
                            —
                          </td>
                        </tr>
                      </NameValueRow>
                    </tbody>
                  </table>
                  <div
                    className="columns"
                  >
                    <div
                      className="column is-3"
                    >
                      <p
                        className="title is-5"
                      >
                        occurrenceForm.observationData.identifiedBy.label
                      </p>
                      <ul>
                        <li
                          key="Indiana Jones"
                        >
                          Indiana Jones
                        </li>
                      </ul>
                    </div>
                    <div
                      className="column is-3"
                    >
                      <p
                        className="title is-5"
                      >
                        occurrenceForm.observationData.recordedBy.label
                      </p>
                      <ul />
                    </div>
                  </div>
                </div>
                <SectionSubtitle>
                  <h2
                    className="title is-5"
                  >
                    occurrenceForm.finalSummary.observationData.speciesDataSubtitle
                  </h2>
                </SectionSubtitle>
                <table
                  className="table is-striped is-fullwidth is-hoverable"
                >
                  <NameValueHeader>
                    <thead>
                      <tr>
                        <th
                          className="type"
                        >
                          common.name
                        </th>
                        <th
                          className="value"
                        >
                          common.value
                        </th>
                      </tr>
                    </thead>
                  </NameValueHeader>
                  <tbody>
                    <NameValueRow
                      name="occurrenceForm.observationData.references.label"
                      value=""
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.observationData.references.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.observationData.identificationQualifier.label"
                      value=""
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.observationData.identificationQualifier.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      name="occurrenceForm.observationData.identificationRemarks.label"
                      value=""
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          occurrenceForm.observationData.identificationRemarks.label
                        </td>
                        <td
                          className="value"
                        >
                          —
                        </td>
                      </tr>
                    </NameValueRow>
                  </tbody>
                </table>
                <ChangeButton
                  onClick={[Function]}
                >
                  <button
                    className="change-button button"
                    onClick={[Function]}
                  >
                    common.change
                  </button>
                </ChangeButton>
              </section>
              <section
                className="measurement-or-fact-summary"
              >
                <SectionTitle>
                  <h2
                    className="title is-4"
                  >
                    5 - 
                    occurrenceForm.measurementOrFact.step.stepTitle
                  </h2>
                </SectionTitle>
                <table
                  className="measurements table is-fullwidth is-striped is-hoverable"
                >
                  <thead>
                    <tr>
                      <th
                        className="type"
                      >
                        common.type
                      </th>
                      <th
                        className="name"
                      >
                        common.name
                      </th>
                      <th
                        className="value"
                      >
                        common.value
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr
                      className="fieldrow"
                      key="0"
                    >
                      <td>
                        Pressure
                      </td>
                      <td>
                        Decibars
                      </td>
                      <td>
                        10
                      </td>
                    </tr>
                    <tr
                      className="fieldrow"
                      key="1"
                    >
                      <td>
                        Pressure
                      </td>
                      <td>
                        Decibars
                      </td>
                      <td>
                        20
                      </td>
                    </tr>
                    <tr
                      className="fieldrow"
                      key="2"
                    >
                      <td>
                        Pressure
                      </td>
                      <td>
                        Decibars
                      </td>
                      <td>
                        20
                      </td>
                    </tr>
                  </tbody>
                </table>
                <ChangeButton
                  onClick={[Function]}
                >
                  <button
                    className="change-button button"
                    onClick={[Function]}
                  >
                    common.change
                  </button>
                </ChangeButton>
              </section>
              <section
                className="darwin-core-fields-summary"
              >
                <SectionTitle>
                  <h2
                    className="title is-4"
                  >
                    6 - 
                    occurrenceForm.darwinCoreFields.step.stepTitle
                  </h2>
                </SectionTitle>
                <table
                  className="table is-striped is-fullwidth is-hoverable"
                >
                  <NameValueHeader>
                    <thead>
                      <tr>
                        <th
                          className="type"
                        >
                          common.name
                        </th>
                        <th
                          className="value"
                        >
                          common.value
                        </th>
                      </tr>
                    </thead>
                  </NameValueHeader>
                  <tbody>
                    <NameValueRow
                      key="0"
                      name="name-1"
                      value="value-1"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          name-1
                        </td>
                        <td
                          className="value"
                        >
                          value-1
                        </td>
                      </tr>
                    </NameValueRow>
                    <NameValueRow
                      key="1"
                      name="name-3"
                      value="value-3"
                    >
                      <tr
                        className="name-value-row fieldrow"
                      >
                        <td
                          className="name"
                        >
                          name-3
                        </td>
                        <td
                          className="value"
                        >
                          value-3
                        </td>
                      </tr>
                    </NameValueRow>
                  </tbody>
                </table>
                <ChangeButton
                  onClick={[Function]}
                >
                  <button
                    className="change-button button"
                    onClick={[Function]}
                  >
                    common.change
                  </button>
                </ChangeButton>
              </section>
              <SubmitEntryButton
                onClick={[Function]}
              >
                <div
                  className="submit-entry-button columns is-mobile is-centered"
                >
                  <button
                    className="button is-info is-medium"
                    onClick={[Function]}
                  >
                    common.submit
                  </button>
                </div>
              </SubmitEntryButton>
            </div>
          </FinalSummary>
        </section>
      </OccurrenceForm>
    </Router>
  </MemoryRouter>
</AuthProvider>
`;
