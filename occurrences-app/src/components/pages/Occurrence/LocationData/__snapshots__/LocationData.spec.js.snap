// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationData renders correctly 1`] = `
<LocationData
  data={
    Object {
      "beginDate": 1605456875121,
      "coordinateUncertainty": null,
      "decimalLatitude": null,
      "decimalLongitude": null,
      "endDate": null,
      "maximumDepth": null,
      "minimumDepth": null,
      "verbatimCoordinates": "",
      "verbatimDepth": "",
    }
  }
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "beginDate": 1605456875121,
            "coordinateUncertainty": null,
            "decimalLatitude": null,
            "decimalLongitude": null,
            "endDate": null,
            "maximumDepth": null,
            "minimumDepth": null,
            "verbatimCoordinates": "",
            "verbatimDepth": "",
          },
        ],
        Array [
          Object {
            "beginDate": 1605456875121,
            "coordinateUncertainty": null,
            "decimalLatitude": null,
            "decimalLongitude": null,
            "endDate": null,
            "maximumDepth": null,
            "minimumDepth": null,
            "verbatimCoordinates": "",
            "verbatimDepth": "",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="location-data section is-fluid"
  >
    <h2
      className="title"
    >
      occurrenceForm.locationData.timeData.title
    </h2>
    <div
      className="columns"
    >
      <div
        className="event-begin-date column field is-two-fifths"
      >
        <label
          className="label"
        >
          occurrenceForm.locationData.eventBeginDate
        </label>
        <DatePicker
          onChange={[Function]}
          value={1605456875121}
        >
          <DateTimePicker
            className="input"
            onChange={[Function]}
            options={Object {}}
            value={1605456875121}
          >
            <input
              className="input"
            />
          </DateTimePicker>
        </DatePicker>
      </div>
      <div
        className="event-end-date column field is-two-fifths"
      >
        <label
          className="label has-text-weight-normal"
        >
          occurrenceForm.locationData.eventEndDate
        </label>
        <div
          className="control"
        >
          <DatePicker
            onChange={[Function]}
            value={null}
          >
            <DateTimePicker
              className="input"
              onChange={[Function]}
              options={Object {}}
              value={null}
            >
              <input
                className="input"
              />
            </DateTimePicker>
          </DatePicker>
        </div>
        <p
          className="help"
        >
          occurrenceForm.locationData.eventEndDateHelp
        </p>
      </div>
    </div>
    <h2
      className="title"
    >
      occurrenceForm.locationData.enterCoordinates.title
    </h2>
    <div
      className="columns no-margin"
    >
      <InputNumber
        className="decimal-longitude is-3 mandatory no-margin"
        name="occurrenceForm.locationData.decimalLongitude"
        onChange={[Function]}
        step={0.0001}
        value={null}
      >
        <div
          className="column field decimal-longitude is-3 mandatory no-margin"
        >
          <label
            className="label"
          >
            occurrenceForm.locationData.decimalLongitude.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.0001}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
      <InputNumber
        className="decimal-latitude is-3 mandatory no-margin"
        name="occurrenceForm.locationData.decimalLatitude"
        onChange={[Function]}
        step={0.0001}
        value={null}
      >
        <div
          className="column field decimal-latitude is-3 mandatory no-margin"
        >
          <label
            className="label"
          >
            occurrenceForm.locationData.decimalLatitude.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.0001}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
    </div>
    <div
      className="location-picker-notice button"
      onClick={[Function]}
    >
      occurrenceForm.locationData.locationPicker.title
    </div>
    <div
      className="columns"
    >
      <InputNumber
        className="minimum-depth is-3"
        name="occurrenceForm.locationData.minimumDepth"
        onChange={[Function]}
        optional={true}
        step={0.01}
        value={null}
      >
        <div
          className="column field minimum-depth is-3"
        >
          <label
            className="label has-text-weight-normal"
          >
            occurrenceForm.locationData.minimumDepth.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.01}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
      <InputNumber
        className="maximum-depth is-3"
        name="occurrenceForm.locationData.maximumDepth"
        onChange={[Function]}
        optional={true}
        step={0.01}
        value={null}
      >
        <div
          className="column field maximum-depth is-3"
        >
          <label
            className="label has-text-weight-normal"
          >
            occurrenceForm.locationData.maximumDepth.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.01}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
      <InputNumber
        className="coordinate-uncertainty is-3"
        name="occurrenceForm.locationData.coordinateUncertainty"
        onChange={[Function]}
        optional={true}
        step={0.01}
        value={null}
      >
        <div
          className="column field coordinate-uncertainty is-3"
        >
          <label
            className="label has-text-weight-normal"
          >
            occurrenceForm.locationData.coordinateUncertainty.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.01}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
    </div>
    <LocationPickerModal
      active={false}
      onChange={[Function]}
      onClose={[Function]}
    >
      <div
        className="location-picker-modal modal"
      >
        <div
          className="modal-background"
        />
        <div
          className="modal-card"
        >
          <header
            className="modal-card-head"
          >
            <p
              className="modal-card-title"
            >
              occurrenceForm.locationData.locationPicker.title
            </p>
            <button
              aria-label="close"
              className="delete"
              onClick={[Function]}
            />
          </header>
          <section
            className="modal-card-body"
          >
            <Component
              onChange={[Function]}
            >
              <div
                id="location-picker-mock"
              >
                LocationPickerMock
              </div>
            </Component>
          </section>
          <footer
            className="modal-card-foot"
          >
            <button
              className="button is-success"
              onClick={[Function]}
            >
              common.confirm
            </button>
            <button
              className="button"
              onClick={[Function]}
            >
              common.cancel
            </button>
          </footer>
        </div>
      </div>
    </LocationPickerModal>
    <h2
      className="title"
    >
      occurrenceForm.locationData.verbatimData.title
    </h2>
    <h3
      className="subtitle"
    >
      occurrenceForm.locationData.verbatimData.subtitle
    </h3>
    <div
      className="columns"
    >
      <InputText
        className="verbatim-coordinates is-3"
        name="occurrenceForm.locationData.verbatimCoordinates"
        onChange={[Function]}
        optional={true}
        value=""
      >
        <div
          className="column field verbatim-coordinates is-3"
        >
          <label
            className="label has-text-weight-normal"
            htmlFor="occurrenceform.locationdata.verbatimcoordinates.label"
          >
            occurrenceForm.locationData.verbatimCoordinates.label
          </label>
          <input
            className="input"
            id="occurrenceform.locationdata.verbatimcoordinates.label"
            onChange={[Function]}
            type="text"
            value=""
          />
        </div>
      </InputText>
      <InputText
        className="verbatim-depth is-3"
        name="occurrenceForm.locationData.verbatimDepth"
        onChange={[Function]}
        optional={true}
        value=""
      >
        <div
          className="column field verbatim-depth is-3"
        >
          <label
            className="label has-text-weight-normal"
            htmlFor="occurrenceform.locationdata.verbatimdepth.label"
          >
            occurrenceForm.locationData.verbatimDepth.label
          </label>
          <input
            className="input"
            id="occurrenceform.locationdata.verbatimdepth.label"
            onChange={[Function]}
            type="text"
            value=""
          />
        </div>
      </InputText>
    </div>
  </div>
</LocationData>
`;
