// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationData renders correctly 1`] = `
<LocationData
  data={
    Object {
      "coordinateUncertainty": null,
      "decimalLatitude": null,
      "decimalLongitude": null,
      "maximumDepth": null,
      "minimumDepth": null,
      "verbatimCoordinates": "",
      "verbatimDepth": "",
    }
  }
  nextStepHandler={[MockFunction]}
  onChange={[MockFunction]}
>
  <div
    className="location-data section is-fluid"
  >
    <h1
      className="title"
    >
      occurrenceForm.locationData.enterCoordinates.title
    </h1>
    <h2
      className="subtitle"
    >
      occurrenceForm.locationData.enterCoordinates.subtitle
    </h2>
    <div
      className="columns"
    >
      <InputNumber
        className="decimal-longitude is-3"
        name="occurrenceForm.locationData.decimalLongitude"
        onChange={[Function]}
        step={0.0001}
        value={null}
      >
        <div
          className="column field decimal-longitude is-3"
        >
          <label
            className="label"
          >
            occurrenceForm.locationData.decimalLongitude.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.0001}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
      <InputNumber
        className="decimal-latitude is-3"
        name="occurrenceForm.locationData.decimalLatitude"
        onChange={[Function]}
        step={0.0001}
        value={null}
      >
        <div
          className="column field decimal-latitude is-3"
        >
          <label
            className="label"
          >
            occurrenceForm.locationData.decimalLatitude.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.0001}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
      <InputNumber
        className="coordinate-uncertainty is-3"
        name="occurrenceForm.locationData.coordinateUncertainty"
        onChange={[Function]}
        optional={true}
        step={0.01}
        value={null}
      >
        <div
          className="column field coordinate-uncertainty is-3"
        >
          <label
            className="label has-text-weight-normal"
          >
            occurrenceForm.locationData.coordinateUncertainty.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.01}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
    </div>
    <div
      className="columns"
    >
      <InputNumber
        className="minimum-depth is-3"
        name="occurrenceForm.locationData.minimumDepth"
        onChange={[Function]}
        optional={true}
        step={0.01}
        value={null}
      >
        <div
          className="column field minimum-depth is-3"
        >
          <label
            className="label has-text-weight-normal"
          >
            occurrenceForm.locationData.minimumDepth.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.01}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
      <InputNumber
        className="maximum-depth is-3"
        name="occurrenceForm.locationData.maximumDepth"
        onChange={[Function]}
        optional={true}
        step={0.01}
        value={null}
      >
        <div
          className="column field maximum-depth is-3"
        >
          <label
            className="label has-text-weight-normal"
          >
            occurrenceForm.locationData.maximumDepth.label
          </label>
          <input
            className="input"
            onChange={[Function]}
            step={0.01}
            type="number"
            value=""
          />
        </div>
      </InputNumber>
    </div>
    <div
      className="columns"
    >
      <div
        className="location-picker-notice column is-narrow"
        onClick={[Function]}
      >
        occurrenceForm.locationData.locationPicker.title
      </div>
    </div>
    <LocationPickerModal
      active={false}
      onChange={[Function]}
      onClose={[Function]}
    >
      <div
        className="location-picker-modal modal"
      >
        <div
          className="modal-background"
        />
        <div
          className="modal-card"
        >
          <header
            className="modal-card-head"
          >
            <p
              className="modal-card-title"
            >
              occurrenceForm.locationData.locationPicker.title
            </p>
            <button
              aria-label="close"
              className="delete"
              onClick={[Function]}
            />
          </header>
          <section
            className="modal-card-body"
          >
            <Component
              onChange={[Function]}
            >
              <div
                id="location-picker-mock"
              >
                LocationPickerMock
              </div>
            </Component>
          </section>
          <footer
            className="modal-card-foot"
          >
            <button
              className="button is-success"
              onClick={[Function]}
            >
              common.confirm
            </button>
            <button
              className="button"
              onClick={[Function]}
            >
              common.cancel
            </button>
          </footer>
        </div>
      </div>
    </LocationPickerModal>
    <div
      className="verbatim-data"
    >
      <h1
        className="title"
      >
        occurrenceForm.locationData.verbatimData.title
      </h1>
      <h2
        className="subtitle"
      >
        occurrenceForm.locationData.verbatimData.subtitle
      </h2>
      <div
        className="columns"
      >
        <InputText
          className="verbatim-coordinates is-3"
          name="occurrenceForm.locationData.verbatimCoordinates"
          onChange={[Function]}
          optional={true}
          value=""
        >
          <div
            className="column field verbatim-coordinates is-3"
          >
            <label
              className="label has-text-weight-normal"
            >
              occurrenceForm.locationData.verbatimCoordinates.label
            </label>
            <input
              className="input"
              onChange={[Function]}
              type="text"
              value=""
            />
          </div>
        </InputText>
        <InputText
          className="verbatim-depth is-3"
          name="occurrenceForm.locationData.verbatimDepth"
          onChange={[Function]}
          optional={true}
          value=""
        >
          <div
            className="column field verbatim-depth is-3"
          >
            <label
              className="label has-text-weight-normal"
            >
              occurrenceForm.locationData.verbatimDepth.label
            </label>
            <input
              className="input"
              onChange={[Function]}
              type="text"
              value=""
            />
          </div>
        </InputText>
      </div>
    </div>
    <CopyPreviousData>
      <div
        className="columns"
      >
        <div
          className="copy-previous-data column is-narrow"
        >
          copy data from previous entry
        </div>
      </div>
    </CopyPreviousData>
    <ContinueButton
      name="datasetContinue"
      nextStepHandler={[MockFunction]}
      value="occurrenceForm.locationData.step.nextStep"
      wrapperClassName=""
    >
      <div
        className=""
      >
        <button
          className="button is-info"
          name="datasetContinue"
          onClick={[MockFunction]}
        >
          occurrenceForm.locationData.step.nextStep
        </button>
      </div>
    </ContinueButton>
  </div>
</LocationData>
`;
