openapi: 3.0.0
info:
  version: 1.0.0
  title: Small Data Swagger
  license:
    name: MIT
servers:
  - url: http://localhost:8008/
  - url: http://localhost:8080/
paths:
  /api/status:
    get:
      summary: get status of the server
      operationId: getStatus
      tags:
        - info
      responses:
        200:
          description: application running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/rss/{periodicity}:
    get:
      summary: rss feed
      operationId: getRss
      parameters:
        - name: periodicity
          in: path
          description: periodicity of the rss feed
          required: true
          schema:
            type: string
            enum: ['hourly', 'daily', 'weekly', 'monthly', 'yearly', 'all']
            example: 'weekly'
      tags:
        - rss
      responses:
        200:
          description: received rss
          content:
            application/xml+rss: {}
  /api/occurence:
    post:
      summary: post new data to small data occurences
      operationId: postOccurence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Occurence"
      tags:
        - occurences
      responses:
        200:
          description: new occurences data created and stored
          content:
            application/json: {}
        405:
          description: invalid input

components:
  schemas:
    Status:
      type: object
      properties:
        title:
          type: string
          example: 'swaggered application'
        status:
          type: string
          enum: ['OK', 'error']
          example: 'OK'
    DWC.Event:
      type: object
      description: An action that occurs at some location during some time.
      required:
        - eventDate
      properties:
        eventDate:
          type: string
          format: date-time
          description: The date-time or interval during which an Event occurred.
            For occurrences, this is the date-time when the event was recorded.
            Not suitable for a time in a geological context.
            *- Recommended best practice is to use a date that conforms to ISO 8601:2004(E).*
          example: '1963-03-08T14:07-0600'
        verbatimEventDate:
          type: string
          description: The verbatim original representation of the date and time information for an Event.
          example: 'spring 1910'
        fieldNumber:
          type: string
          description: An identifier given to the event in the field. Often serves as a link between
            field notes and the Event.
          example: 'RV Sol 87-03-08'
    DWC.Identification:
      type: object
      description: A taxonomic determination (e.g., the assignment to a taxon).
      properties:
        identificationQualifier:
          type: string
          description: A brief phrase or a standard term ("cf.", "aff.") to express the determiner's doubts
            about the Identification.
          example: aff. agrifolia var. oxyadenia
        identificationRemarks:
          type: string
          description: Comments or notes about the Identification.
          example: Distinguished between *Anthus correndera* and *Anthus hellmayri* based on
            the comparative lengths of the u√±as.
        identifiedBy:
          type: array
          example: ['James L. Patton', 'Theodore Pappenfuss', 'Robert Macey']
          items:
            type: string
            description: A list (concatenated and separated) of names of people, groups, or organizations
              who assigned the Taxon to the subject.
              *- Recommended best practice is to separate the values in a list with space vertical bar space ( | ).*
    DWC.Location:
      type: object
      description: A spatial region or named place.
      required:
        - decimalLongitude
        - decimalLatitude
      properties:
        decimalLongitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 3.2249
        decimalLatitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 51.2108
        verbatimCoordinates:
          type: string
        coordinateUncertaintyInMeters:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        footprintWKT:
          type: string
        locality:
          type: string
        minimumDepthInMeters:
          type: number
          format: float
          minimum: 0
        maximumDepthInMeters:
          type: number
          format: float
          minimum: 0
        verbatimDepth:
          type: string
      example:
        decimalLongitude: 45.25
        decimalLatitude: -54.54
        maximumDepthInMeters: 5.5
        verbatimDepth: 18ft
    EMOF.MeasurementOrFact:
      type: object
      required:
        - measurementType
        - measurementValue
      properties:
        measurementType:
          type: string
        measurementTypeID:
          type: string
        measurementValue:
          type: string
        measurementValueID:
          type: string
        measurementAccuracy:
          type: string
        measurementUnit:
          type: string
        measurementUnitID:
          type: string
        measurementMethod:
          type: string
        measurementRemarks:
          type: string
    DWC.Occurence:
      type: object
      description: An existence of an Organism (sensu
        [http://rs.tdwg.org/dwc/terms/Organism](http://rs.tdwg.org/dwc/terms/Organism)) at a particular place
        at a particular time.
      required:
        - occurenceID
      properties:
        occurenceID:
          type: string
        occurenceStatus:
          type: string
          enum: ['absent', 'present']
          example: 'present'
        occurenceRemarks:
          type: string
        catalogNumber:
          type: string
        recordedBy:
          type: string
    DWC.Record:
      type: object
      required:
        - basisOfRecord
      properties:
        basisOfRecord:
          type: string
          enum: ['PreservedSpecimen', 'FossilSpecimen', 'LivingSpecimen', 'HumanObservation', 'MachineObservation']
          example: 'HumanObservation'
        references:
          type: array
          items:
            type: string
            format: uri
          example: ['ref1', 'ref2']
        institutionCode:
          type: string
        collectionCode:
          type: string
    DWC.Taxon:
      type: object
      description: A group of organisms (sensu
        [http://purl.obolibrary.org/obo/OBI_0100026](http://purl.obolibrary.org/obo/OBI_0100026))
        considered by taxonomists to form a homogeneous unit.
      required:
        - scientificNameID
      properties:
        scientificNameID:
          type: string
        scientificName:
          type: string
    Occurence:
      type: object
      required:
        - location
        - taxon
        - occurence
        - event
        - record
      properties:
        location:
          $ref: "#/components/schemas/DWC.Location"
        taxon:
          $ref: "#/components/schemas/DWC.Taxon"
        occurence:
          $ref: "#/components/schemas/DWC.Occurence"
        event:
          $ref: "#/components/schemas/DWC.Event"
        record:
          $ref: "#/components/schemas/DWC.Record"
        identification:
          $ref: "#/components/schemas/DWC.Identification"
        measurementOrFact:
          type: array
          items:
            $ref: "#/components/schemas/EMOF.MeasurementOrFact"
        custom:
          type: array
          items:
            type: object
            required:
              - term
              - value
            properties:
              term:
                type: string
              value:
                type: string
      additionalProperties: false
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
