// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActiveStepHeader does not render StepFooter if last step 1`] = `
<ActiveStepHeader
  activeStepIndex={6}
  onContinueButtonClick={[Function]}
  onCopyPreviousDataClick={[Function]}
  onStepTitleClick={[Function]}
  stepDescription="step description"
  stepTitle="step title"
  totalSteps={6}
>
  <StepHeader
    className="active has-background-grey has-text-white"
    dataDescription=""
    iconVisible={false}
    onStepTitleClick={[Function]}
    selectedData=""
    stepDescription="step description"
    stepTitle="step title"
  >
    <header
      className="step-header columns is-vcentered active has-background-grey has-text-white"
      onClick={[Function]}
    >
      <div
        className="column is-1 is-hidden-mobile"
      >
        <p
          className="datadescription"
        />
      </div>
      <p
        className="selected-data column is-hidden-mobile"
      />
      <div
        className="column details"
      >
        <h3
          className="is-size-6"
        >
          step description
        </h3>
        <h2
          className="step-title"
        >
          step title
        </h2>
      </div>
    </header>
  </StepHeader>
  <StepFooter
    activeStepIndex={6}
    onContinueButtonClick={[Function]}
    onCopyPreviousDataClick={[Function]}
  >
    <div
      className="step-footer columns section"
    >
      <CopyPreviousData
        onClick={[Function]}
        visible={true}
      >
        <div
          className="columns"
        >
          <div
            className="copy-previous-data column is-narrow"
            onClick={[Function]}
          >
            occurrenceForm.copyPreviousStep
          </div>
        </div>
      </CopyPreviousData>
    </div>
  </StepFooter>
</ActiveStepHeader>
`;

exports[`ActiveStepHeader does not render StepFooter if next step is not provided 1`] = `
<ActiveStepHeader
  activeStepIndex={1}
  onContinueButtonClick={[Function]}
  onCopyPreviousDataClick={[Function]}
  onStepTitleClick={[Function]}
  stepDescription="step description"
  stepTitle="step title"
  totalSteps={6}
>
  <StepHeader
    className="active has-background-grey has-text-white"
    dataDescription=""
    iconVisible={false}
    onStepTitleClick={[Function]}
    selectedData=""
    stepDescription="step description"
    stepTitle="step title"
  >
    <header
      className="step-header columns is-vcentered active has-background-grey has-text-white"
      onClick={[Function]}
    >
      <div
        className="column is-1 is-hidden-mobile"
      >
        <p
          className="datadescription"
        />
      </div>
      <p
        className="selected-data column is-hidden-mobile"
      />
      <div
        className="column details"
      >
        <h3
          className="is-size-6"
        >
          step description
        </h3>
        <h2
          className="step-title"
        >
          step title
        </h2>
      </div>
    </header>
  </StepHeader>
  <StepFooter
    activeStepIndex={1}
    onContinueButtonClick={[Function]}
    onCopyPreviousDataClick={[Function]}
  >
    <div
      className="step-footer columns section"
    >
      <CopyPreviousData
        onClick={[Function]}
        visible={true}
      >
        <div
          className="columns"
        >
          <div
            className="copy-previous-data column is-narrow"
            onClick={[Function]}
          >
            occurrenceForm.copyPreviousStep
          </div>
        </div>
      </CopyPreviousData>
    </div>
  </StepFooter>
</ActiveStepHeader>
`;

exports[`ActiveStepHeader does not render copy previous step if onCopyPreviousDataClick not provided 1`] = `
<ActiveStepHeader
  activeStepIndex={1}
  onContinueButtonClick={[Function]}
  onStepTitleClick={[Function]}
  stepDescription="step description"
  stepTitle="step title"
  totalSteps={6}
>
  <StepHeader
    className="active has-background-grey has-text-white"
    dataDescription=""
    iconVisible={false}
    onStepTitleClick={[Function]}
    selectedData=""
    stepDescription="step description"
    stepTitle="step title"
  >
    <header
      className="step-header columns is-vcentered active has-background-grey has-text-white"
      onClick={[Function]}
    >
      <div
        className="column is-1 is-hidden-mobile"
      >
        <p
          className="datadescription"
        />
      </div>
      <p
        className="selected-data column is-hidden-mobile"
      />
      <div
        className="column details"
      >
        <h3
          className="is-size-6"
        >
          step description
        </h3>
        <h2
          className="step-title"
        >
          step title
        </h2>
      </div>
    </header>
  </StepHeader>
  <StepFooter
    activeStepIndex={1}
    onContinueButtonClick={[Function]}
  >
    <div
      className="step-footer columns section"
    >
      <CopyPreviousData
        visible={false}
      >
        <div
          className="columns"
        >
          <div
            className="copy-previous-data column is-narrow"
          />
        </div>
      </CopyPreviousData>
    </div>
  </StepFooter>
</ActiveStepHeader>
`;

exports[`ActiveStepHeader renders StepFooter with all data if next step is provided 1`] = `
<ActiveStepHeader
  activeStepIndex={1}
  nextStep="next step"
  onContinueButtonClick={[Function]}
  onCopyPreviousDataClick={[Function]}
  onStepTitleClick={[Function]}
  stepDescription="step description"
  stepTitle="step title"
  totalSteps={6}
>
  <StepHeader
    className="active has-background-grey has-text-white"
    dataDescription=""
    iconVisible={false}
    onStepTitleClick={[Function]}
    selectedData=""
    stepDescription="step description"
    stepTitle="step title"
  >
    <header
      className="step-header columns is-vcentered active has-background-grey has-text-white"
      onClick={[Function]}
    >
      <div
        className="column is-1 is-hidden-mobile"
      >
        <p
          className="datadescription"
        />
      </div>
      <p
        className="selected-data column is-hidden-mobile"
      />
      <div
        className="column details"
      >
        <h3
          className="is-size-6"
        >
          step description
        </h3>
        <h2
          className="step-title"
        >
          step title
        </h2>
      </div>
    </header>
  </StepHeader>
  <StepFooter
    activeStepIndex={1}
    nextStep="next step"
    onContinueButtonClick={[Function]}
    onCopyPreviousDataClick={[Function]}
  >
    <div
      className="step-footer columns section"
    >
      <CopyPreviousData
        onClick={[Function]}
        visible={true}
      >
        <div
          className="columns"
        >
          <div
            className="copy-previous-data column is-narrow"
            onClick={[Function]}
          >
            occurrenceForm.copyPreviousStep
          </div>
        </div>
      </CopyPreviousData>
      <ContinueButton
        name="locationContinue"
        onClick={[Function]}
        value="next step"
      >
        <button
          className="continue-button button is-info"
          name="locationContinue"
          onClick={[Function]}
        >
          common.continueTo next step
        </button>
      </ContinueButton>
    </div>
  </StepFooter>
</ActiveStepHeader>
`;
